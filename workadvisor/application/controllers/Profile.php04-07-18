<?php
defined('BASEPATH') OR exit('No direct script access allowed');
error_reporting(E_ALL);
class Profile extends MY_Controller {
     private $error;
    public function index(){
        $this->session->set_userdata('posts',array());
        $this->session->set_userdata('user_login_type','performer');
        if($this->checkUserLogin()){
            $user_id = get_current_user_id();
            $condition=array('id'=>$user_id); 			     					                                             
            $data['user_data'] = get_where('tb_users',$condition,'row');
            $category=$data['user_data']->user_category;
            if($category==""){
                redirect('user/create_category');
            }
            $data['category_details']=$this->common_model->getAllwhere(CATEGORY,array('category_status'=>1));
            $data['category_questions'] = $this->common_model->getsingle(CATEGORY,array('id'=>$category));
            $data['posts_details']    = $this->common_model->getAllwhere(POSTS,array('user_id'=>$user_id,'post_status'=>0), 'id', 'DESC','all',5,0,$group_by='',$and_where = '');
            /*******POST-BY-COMPANY******/
            $datacomps = $this->common_model->getAllwhere(POSTS,array('user_id'=>$user_id,'post_status'=>0), 'id', 'DESC','all','','',$group_by='company',$and_where = '');
            if(!empty($datacomps['result'])){
                foreach($datacomps ['result'] as $compss){
                    $company_ids=$compss->company;
                    if($company_ids==0){
                        $company_name=isset($data['category_questions']->name)?$data['category_questions']->name:'';
                    }else{
                        $companyDTL =$this->common_model->getsingle(USERS,array('id'=>$company_ids));
                        $company_name=isset($companyDTL->business_name)?$companyDTL->business_name:'';
                    }

                    $postbycomp = $this->common_model->getAllwhere(POSTS,array('user_id'=>$user_id,'post_status'=>0,'company'=>$company_ids), 'id', 'DESC','all','','',$group_by='',$and_where = ''); 

                    $data['postbycompany'][$company_name]= $postbycomp;
                }
            }



            /**********************/


            if($data['user_data']->user_role == 'Performer'){
                $workingAt=$this->common_model->getAllwhere(REQUESTS,array('sender'=>$user_id,'status'=>1),'id','DESC','all',1);

                if(!empty($workingAt['result'])){
                    $compId=$workingAt['result'][0]->receiver;
                    $data['workingAt'] = get_where('tb_users',array('id'=>$compId),'row');
                }else{
                    $data['workingAt']=array();
                }


                $info=array('tb_users.id','tb_users.firstname','tb_users.lastname','tb_users.email','tb_users.profile','tb_users.city','tb_users.state','tb_users.country','tb_users.user_role','tb_users.business_name');
                $relation="tb_users.id=friends.user_one_id";
                $condition=array('friends.user_two_id'=>$user_id,'friends.status'=>0);
                $relation2="tb_users.id=friends.user_one_id OR tb_users.id=friends.user_two_id";
                $condition2="(friends.user_two_id='$user_id' OR friends.user_one_id='$user_id') AND friends.status=1 AND tb_users.id!='$user_id' ";
                // $data['pendingRequest'] = $this->common_model->get_two_table_data($info,USERS,FRIENDS,$relation,$condition,$groupby="");
                $pendingRequest = $this->common_model->get_two_table_data($info,USERS,FRIENDS,$relation,$condition,$groupby="");

                //$data['allFriends'] = $this->common_model->get_two_table_data($info,USERS,FRIENDS,$relation2,$condition2,$groupby="");
                $allFriends = $this->common_model->get_two_table_data($info,USERS,FRIENDS,$relation2,$condition2,$groupby="");
                $fcount = 0;
                if(!empty($data['pendingRequest'])){
                    $fcount =  count($data['pendingRequest']) - 1;
                }
                $info=array('tb_users.id','tb_users.firstname','tb_users.lastname','tb_users.email','tb_users.profile','tb_users.city','tb_users.state','tb_users.country','tb_users.business_name','requests.job_requested_by','tb_users.user_role');
                $relation="tb_users.id=requests.receiver";
                $condition=array('requests.sender'=>get_current_user_id(),'requests.status'=>0,'job_requested_by!='=>get_current_user_id(0));
                $pendingRequestByCompany = $this->common_model->get_two_table_data($info,USERS,REQUESTS,$relation,$condition,$groupby="");
                if(!empty($pendingRequestByCompany) && !empty($pendingRequest)){
                    $data['pendingRequest'] = array_merge($pendingRequest,$pendingRequestByCompany);
                }else if(!empty($pendingRequest)){
                    $data['pendingRequest'] = $pendingRequest;
                }else if(!empty($pendingRequestByCompany)){
                    $data['pendingRequest'] = $pendingRequestByCompany;
                }
                // pr($data['pendingRequest']);


                $relation2="tb_users.id=requests.receiver";
                $condition2="(requests.sender='$user_id') AND requests.status=1 AND tb_users.id!='$user_id' ";
                // $allFriendsCompany = $this->common_model->get_two_table_data($info,USERS,REQUESTS,$relation2,$condition2,$groupby="");
                $allFriendsCompany = array();
                if(!empty($allFriendsCompany) && !empty($allFriends)){
                    $data['allFriends'] = array_merge($allFriends,$allFriendsCompany);
                }else if(!empty($allFriends)){
                    $data['allFriends'] = $allFriends;
                }else if(!empty($allFriendsCompany)){
                    $data['allFriends'] = $allFriendsCompany;
                }
                
                $relation2="tb_users.id=requests.sender OR tb_users.id=requests.receiver";
                $condition2="(requests.receiver='$user_id' OR requests.sender='$user_id') AND requests.status=1 AND tb_users.id!='$user_id' ";
                $data['workingAt1'] = $this->common_model->get_two_table_data($info,USERS,REQUESTS,$relation2,$condition2,$groupby="");

                $data['logoutUrl'] = $this->facebook->logout_url();
//*******************//
                $inform=array('ratings.company_id','tb_users.business_name');
                $compRatdata=$this->common_model->get_two_table_data($inform,RATINGS,USERS,'ratings.company_id=tb_users.id',array('ratings.rated_to_user'=>$user_id),"ratings.company_id");
                /************************/
                $indivReview=array();
                foreach($compRatdata as $com){
                    $companyId=$com['company_id'];
                    $business_name=$com['business_name'];
                    $ratingDetails = $this->common_model->getAllwhere(RATINGS,array('rated_to_user'=>$user_id,'company_id'=>$companyId));
                    $reviewcounter=$ratingDetails['total_count'];
                    $ratingAverages=0;
                    $ques1 = 0;
                    $ques2 = 0;
                    $ques3 = 0;
                    $ques4 = 0;
                    $ques5 = 0;
                    $ques = array();
                    if(!empty($ratingDetails['result'])){
                        foreach($ratingDetails['result'] as $row){
                            $retedby=$row->rated_by_user;	
                            $cusers = $this->common_model->getsingle(USERS,array('id'=>$retedby));
                            $givername=isset($cusers->firstname) ? $cusers->firstname : "" ;
                            $profile=isset($cusers->profile) ? $cusers->profile : "" ;
                            $city=isset($cusers->city) ? $cusers->city : "" ;
                            $state=isset($cusers->state) ? $cusers->state : "" ;
                            $country=isset($cusers->country) ? $cusers->country : "";

                            if($row->ques_1){
                                $ques1+= $row->ques_1;
                            }
                            if($row->ques_2){
                                $ques2+= $row->ques_2;
                            }
                            if($row->ques_3){
                                $ques3+= $row->ques_3;
                            }
                            if($row->ques_4){
                                $ques4+= $row->ques_4;
                            }
                            if($row->ques_5){
                                $ques5+= $row->ques_5;
                            }

                            $history = array();
                            if($ques1!=0){
                                $ques = $ques1/$reviewcounter;
                                $history[0] = $ques;
                                $ques_[0] = starRating($ques);
                            }
                            else
                                $ques_[0] = starRating(0);


                            if($ques2!=0){
                                $ques = $ques2/$reviewcounter;
                                $history[1] = $ques;
                                $ques_[1] = starRating($ques);
                            }
                            else
                                $ques_[1] = starRating(0);

                            if($ques3!=0){
                                $ques = $ques3/$reviewcounter;
                                $history[2] = $ques;
                                $ques_[2] = starRating($ques);
                            }
                            else
                                $ques_[2] = starRating(0);

                            if($ques4!=0){
                                $ques = $ques4/$reviewcounter;
                                $history[3] = $ques;
                                $ques_[3] = starRating($ques);
                            }
                            else
                                $ques_[3] = starRating(0);

                            if($ques5!=0){
                                $ques = $ques5/$reviewcounter;
                                $history[4] = $ques;
                                $ques_[4] = starRating($ques);
                            }
                            else{
                                $ques_[4] = starRating(0);
                            }
                            $ques_['message']=$row->message;
                            $ques_['company_id']=$companyId;
                            $ques_['retedbyid']=$row->rated_by_user;
                            $ques_['givername']=$givername;
                            $ques_['profile']=$profile;
                            $ques_['address']=$city.','.$state.','.$country;
                            $indivReview[$business_name][]= $ques_;
                        }

                    } else{
                        for($i=0;$i<=5;$i++){
                            $ques_[$i] = starRating(0);
                        }
                        $indivReview[$business_name]['historyRating'][]= $ques_;
                    }
                }
                $data['MyhistoryRating'] = $indivReview;
//code for overall rating
                $data['ratingDetails'] = $this->common_model->getAllwhere(RATINGS,array('rated_to_user'=>$user_id));
                $data['reviewCount'] = $data['ratingDetails']['total_count'];

                if(!empty($data['ratingDetails']['result'])){
                    $ratingAverage=0;
                    $reviewCount  = $data['ratingDetails']['total_count'];
                    foreach($data['ratingDetails']['result'] as $row){
                        $average = 0;
                        $total = $row->ques_1+$row->ques_2+$row->ques_3+$row->ques_4+$row->ques_5;
                        if($total>0){
                            $average = $total/5;
                        }
                        $ratingAverage+=$average;
                    }
                    if($ratingAverage>0)
                        $data['ratingAverage'] = $ratingAverage/$reviewCount;
                    else
                        $data['ratingAverage'] = 0;
                    $data['starRating'] = starRating($data['ratingAverage'],$data['reviewCount']);
//code for questionwise rating in history
                    $ques1 = 0;
                    $ques2 = 0;
                    $ques3 = 0;
                    $ques4 = 0;
                    $ques5 = 0;
                    $ques = array();
                    foreach($data['ratingDetails']['result'] as $row){
                        if($row->ques_1){
                            $ques1+= $row->ques_1;
                        }
                        if($row->ques_2){
                            $ques2+= $row->ques_2;
                        }
                        if($row->ques_3){
                            $ques3+= $row->ques_3;
                        }
                        if($row->ques_4){
                            $ques4+= $row->ques_4;
                        }
                        if($row->ques_5){
                            $ques5+= $row->ques_5;
                        }

                        $history = array();
                        if($ques1!=0){
                            $ques = $ques1/$reviewCount;
                            $history[0] = $ques;
                            $ques_[0] = starRating($ques);
                        }
                        else
                            $ques_[0] = starRating(0);


                        if($ques2!=0){
                            $ques = $ques2/$reviewCount;
                            $history[1] = $ques;
                            $ques_[1] = starRating($ques);
                        }
                        else
                            $ques_[1] = starRating(0);

                        if($ques3!=0){
                            $ques = $ques3/$reviewCount;
                            $history[2] = $ques;
                            $ques_[2] = starRating($ques);
                        }
                        else
                            $ques_[2] = starRating(0);

                        if($ques4!=0){
                            $ques = $ques4/$reviewCount;
                            $history[3] = $ques;
                            $ques_[3] = starRating($ques);
                        }
                        else
                            $ques_[3] = starRating(0);

                        if($ques5!=0){
                            $ques = $ques5/$reviewCount;
                            $history[4] = $ques;
                            $ques_[4] = starRating($ques);
                        }
                        else
                            $ques_[4] = starRating(0);
                    }

                    $data['historyRating'] = $ques_;
                    $data['historyReviewsRating'] = $history;
                }else{
                    for($i=0;$i<=5;$i++){
                        $ques_[$i] = starRating(0);
                    }
                    $data['historyRating'] = $ques_;
                    $data['starRating'] = starRating(0,0);
                }

//Rank section
                $userInfo = $this->common_model->getsingle(USERS,array('id'=>$user_id));
                $category = $userInfo->user_category;
                $data['userRankRatings'] = $this->common_model->get_two_table_data('tb_users.*,count(ratings.id) as review_count',USERS,RATINGS,'tb_users.id = ratings.rated_to_user',array('tb_users.user_category'=>$category,'user_role!='=>'Employer'),'rated_to_user','review_count',"DESC");
                if(!empty($data['userRankRatings'])){
                    $count = 0;
                    foreach($data['userRankRatings'] as $key=>$rating){
                        $count++;
                        $ratingDetails = $this->common_model->getAllwhere(RATINGS,array('rated_to_user'=>$rating['id']));
                        if(!empty($ratingDetails['result'])){
                            $ratingAverage=0;
                            $reviewCount  = $rating['review_count'];
                            foreach($ratingDetails['result'] as $row){
                                $average = 0;
                                $total = $row->ques_1+$row->ques_2+$row->ques_3+$row->ques_4+$row->ques_5;
                                if($total>0){
                                    $average = $total/5;
                                }
                                $ratingAverage+=$average;
                            }
                            if($ratingAverage>0)
                                $ratingAverage = $ratingAverage/$reviewCount;
                            else
                                $ratingAverage = 0;
                            $starRating = starRating($ratingAverage,$rating['review_count']);

                        }
                        else{
                            $ratingAverage = 0;
                            $starRating = starRating($ratingAverage,0);
                        }
                        $data['userRankRatings'][$key]['star_rating'] = $starRating;
                        $data['userRankRatings'][$key]['rank'] = $count;
                    }
                }
//performance calculation
                $percentarray = array();
                if(!empty($data['ratingDetails']['result'])){
                    $percent_cnt1 = 0;
                    $percent_cnt2 = 0;
                    $percent_cnt3 = 0;
                    $percent_cnt4 = 0;
                    $percent_cnt5 = 0;

                    foreach($data['ratingDetails']['result'] as $row){
                        $average = 0;
                        $total = $row->ques_1+$row->ques_2+$row->ques_3+$row->ques_4+$row->ques_5;
                        if($total>0){
                            $average = $total/5;
                            $average = floor($average);
                            if($average > 0){
                                if($average == 1)
                                    $percent_cnt1++;
                                if($average == 2)
                                    $percent_cnt2++;
                                if($average == 3)
                                    $percent_cnt3++;
                                if($average == 4)
                                    $percent_cnt4++;
                                if($average == 5)
                                    $percent_cnt5++;
                            }
                        }
                    }
                    if($percent_cnt1>0){
                        $percentarray[1] = ($percent_cnt1/$data['ratingDetails']['total_count'])*100;
                    }if($percent_cnt2>0){
                        $percentarray[2] = ($percent_cnt2/$data['ratingDetails']['total_count'])*100;
                    }if($percent_cnt3>0){
                        $percentarray[3] = ($percent_cnt3/$data['ratingDetails']['total_count'])*100;
                    }if($percent_cnt4>0){
                        $percentarray[4] = ($percent_cnt4/$data['ratingDetails']['total_count'])*100;
                    }if($percent_cnt5>0){
                        $percentarray[5] = ($percent_cnt5/$data['ratingDetails']['total_count'])*100;
                    }
                }
                $data['percentarray'] = $percentarray;

//QR code generate
                $data['img_url']="";
                $this->load->library('ciqrcode');
                $qr_image=rand().'.png';
                $params['data'] = base_url().'viewdetails/profile/'.encoding(get_current_user_id())."?review=1";
                $params['level'] = 'H';
                $params['size'] = 5;
                $params['savename'] =FCPATH."qr_code/".$qr_image;
                if($this->ciqrcode->generate($params))
                {
                    $data['qr_image']=base_url().'qr_code/'.$qr_image; 
                }
                $data['albumData']=$this->common_model->getAllwhere(ALBUMS,array('user_id'=>get_current_user_id(),'folder_id' => 0));
				$data['albumFolderData']=$this->common_model->getAllwhere(ALBUM_DIR,array('user_id'=>get_current_user_id()));
                $info='payment_details.*';
                $relation = 'tb_users.id = payment_details.user_id';
                $data['paymentData'] = $this->common_model->get_two_table_data($info,USERS,PAYMENT_DETAILS,$relation,array('user_id'=>get_current_user_id()),$groupby="",'payment_details.id','DESC');

                //code for yahoo invites mail url //
                require_once(APPPATH.'libraries/yahoo_api/globals.php');
                require_once(APPPATH.'libraries/yahoo_api/oauth_helper.php');
                $callback    =    base_url()."user/yahoo_response";
                $retarr = get_request_token(OAUTH_CONSUMER_KEY, OAUTH_CONSUMER_SECRET,
                    $callback, false, true, true);
                if (! empty($retarr)){
                    list($info, $headers, $body, $body_parsed) = $retarr;
                    if ($info['http_code'] == 200 && !empty($body)) {
                        $_SESSION['request_token']  = $body_parsed['oauth_token'];
                        $_SESSION['request_token_secret']  = $body_parsed['oauth_token_secret']; $_SESSION['oauth_verifier'] = $body_parsed['oauth_token'];
                        $data['yahooURL'] = urldecode($body_parsed['xoauth_request_auth_url']);
                    }
                }

				$this->pageviewnofooter('profile',$data,$data,array()); 
            }else{
                $info=array('tb_users.id','tb_users.firstname','tb_users.lastname','tb_users.email','tb_users.profile','tb_users.city','tb_users.state','tb_users.country','tb_users.user_role');
                $relation="tb_users.id=requests.sender";

                $condition=array('requests.receiver'=>$user_id,'requests.status'=>0,'requests.job_requested_by!='=>get_current_user_id());
                $relation2="tb_users.id=requests.sender OR tb_users.id=requests.receiver";
                $condition2="(requests.receiver='$user_id' OR requests.sender='$user_id') AND requests.status=1 AND tb_users.id!='$user_id' ";
                $data['pendingRequest'] = $this->common_model->get_two_table_data($info,USERS,REQUESTS,$relation,$condition,$groupby="");
                $data['allEmployee'] = $this->common_model->get_two_table_data($info,USERS,REQUESTS,$relation2,$condition2,$groupby="");

                $data['logoutUrl'] = $this->facebook->logout_url();
//QR code generate
                $userData = $this->session->userdata();
                $data['img_url']="";
                $this->load->library('ciqrcode');
                $qr_image=rand().'.png';
                $params['data'] = base_url().'viewdetails/profile/'.encoding(get_current_user_id())."?review=1";
                $params['level'] = 'H';
                $params['size'] = 5;
                $params['savename'] =FCPATH."qr_code/".$qr_image;
                if($this->ciqrcode->generate($params))
                {
                    $data['qr_image']=base_url().'qr_code/'.$qr_image; 
                }
                $data['albumData']=$this->common_model->getAllwhere(ALBUMS,array('user_id'=>get_current_user_id(),'folder_id' => 0));
				$data['albumFolderData']=$this->common_model->getAllwhere(ALBUM_DIR,array('user_id'=>get_current_user_id()));
                $this->pageviewnofooter('businessprofile',$data,$data,array()); 
// redirect('businessprofile');
            }			   	 

        }else{
            $this->session->set_flashdata('loginmsg','<div class="alert alert-danger text-center">Oops!.  Plz Set your Role!!!</div>');
            redirect('create-category');
        }           
    }
    /*******************GET-POST-BY-Id*******************/
    public function postByLimit($limit,$last_id,$userId){
        //$postArrID = array();
        $random = substr(md5(mt_rand()), 0, 7);
        $id = $userId;
        $posts_details = $this->common_model->getAllwhere(POSTS,array('user_id'=>$id,'post_status'=>0,'id<'=>$last_id), 'id', 'DESC','all','3','0',$group_by='',$and_where = '');
// lq();
        $html="";
        $sessionArr = $this->session->userdata('posts');
        if(!empty($posts_details['result'])){
            $md = 0;
            foreach($posts_details['result'] as $post){ 
                $md=$post->id;
                if(!in_array($post->id,$sessionArr)){
                    $sessionArr[] = $post->id;
                    $postimg="";

                    if($post->post_image!=""){
                        $imgsert=$post->post_image;
                        $postimgarr=explode(',',$imgsert);
                        if(count($postimgarr)>1){ 
                            $postimg.='<div class="row">';
                            foreach($postimgarr as $postim){
                                $postimg.='<div class ="col-sm-4 col-md-4"><a href="#" class="thumbnail"  data-toggle="modal" data-target="#myModal00new'.$md.'"><img src="'.base_url().$postim.'" alt="Post Image"></a></div>';
                            }
                            $postimg.='

                            <div class="col-tz">    
                            <div id="myModal00new'.$md.'" class="modal fade" role="dialog">
                            <div class="modal-dialog">
                            <div class="modal-content">
                            <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>

                            </div>
                            <div class="modal-body">
                            <div class="row">';
                            foreach($postimgarr as $postim){

                                $postimg.='<div class="col-md-3">
                                <div class="fansy-gallry">  
                                <a class="fancybox" data-fancybox="gallery11'.$random.$md.'" href="'.base_url().$postim.'">
                                <img src="'.base_url().$postim.'">
                                </a>
                                </div>
                                </div>';
                            }  
                            $postimg.=' </div>
                            </div>

                            </div>
                            </div>
                            </div>
                            </div></div>';
                        }else{
                            $postimg='<div class="over_viewimg"  data-toggle="modal" data-target="#myModal00new'.$md.'"><img src="'.base_url().$post->post_image.'" class="img-fluid"><div class="bl-box"><img src="'.base_url().'assets/images/scrl.png"></div></div>';
                            $postimg.='

                            <div class="col-tz">    
                            <div id="myModal00new'.$md.'" class="modal fade" role="dialog">
                            <div class="modal-dialog">
                            <div class="modal-content">
                            <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>

                            </div>
                            <div class="modal-body">
                            <div class="row">';
                            foreach($postimgarr as $postim){

                                $postimg.='<div class="col-md-3">
                                <div class="fansy-gallry">  
                                <a class="fancybox" data-fancybox="gallery11'.$random.$md.'" href="'.base_url().$postim.'">
                                <img src="'.base_url().$postim.'">
                                </a>
                                </div>
                                </div>';
                            }  
                            $postimg.=' </div>
                            </div>

                            </div>
                            </div>
                            </div>
                            </div></div>';
                        }
                    }

                    if($post->post_video!=''){
                        $html.='<div class="row">
                        <div>
                        <video width="320" height="240" controls>
                        <source src="'.base_url().'uploads/videos/'.$post->post_video.'" type="video/mp4">
                        <source src="'.base_url().'ploads/videos/'.$post->post_video.'" type="video/webm">
                        <source src="'.base_url().'uploads/videos/'.$post->post_video.'" type="video/ogg">
                        <source src="'.base_url().'uploads/videos/'.$post->post_video.'" type="video/mts">
                        </video>
                        </div>
                        </div>';
                    } 
                    $html.='	
                    <div class="main_blog post-id" id="'.$post->id.'" data-uid="'.$userId.'">
                    '.$postimg.'
                    <div class="contant_overviw esdu" onclick="setID('.$post->id.');"><h1 class="datess">'. date('d-m-Y H:i A',strtotime($post->post_date)).'</h1>
                    <div class="btnns">';
                    if($userId != get_current_user_id()){
                        $html.='
                        <div class="form-group">
                        <a href="#" class="linke" data-toggle="modal" data-target="#sharePostModal"><img src="'.base_url().'assets/images/like.png">
                        <i class="fa fa-thumbs-up"></i>
                        </a>
                        </div>';
                    }
                    if($userId == get_current_user_id()){
                        $html.='
                        <a href="" class="editss" data-toggle="modal" data-target="#myModal2"><img src="'.base_url().'assets/images/edit.png" onclick="editPost('.$post->id.')"></a>
                        <a href="" class="editss" data-toggle="modal" data-target="#modalDelete"><i class="fa fa fa-trash-o"></i></a>';
                    }

                    $html.='</div>
                    <p>'.$post->post_content.'</p></div></div>';
                } //if in_array 
            }
            $this->session->set_userdata('posts',$sessionArr);
        }else{
            $html="";
        } 
        echo $html;

    }		

        //appends all error messages
    private function handle_error($err) {
        $this->error .= $err . "rn";
    }

    //appends all success messages
    private function handle_success($succ) {
        $this->success .= $succ . "rn";
    }


    /****************************************/
 public function Update_profileimg(){
        if(isset($_FILES['profileimg']['name']) && !empty($_FILES['profileimg']['name'])){
            $image = fileUploading('profileimg','users','jpg|gif|png|jpeg|JPG|PNG');
            if(isset($image['error'])){
                $return['status']         =   0; 
                $return['message']        =   strip_tags($image['error']);
                $this->session->set_flashdata('updatemsg','<div class="alert alert-danger text-center">Photo Not Uploaded.'.$image['error'].' </div>');
                redirect('profile');
                exit;
            }else{
                $dataArr['profile']    =  base_url().'uploads/users/'.$image['upload_data']['file_name'];
            }
        }

        $user_id = get_current_user_id();

        $condition=array('id'=>$user_id);   

        $update = $this->common_model->updateFields(USERS,$dataArr,array('id'=>$user_id));
        if($update)
        {                   
            redirect('profile');
        }

    }
    /****************************************/
    public function Editprofile(){
        if(!empty($this->input->post('oldprofessional_skill'))){
            $proskill=array();
            $profressional_skill = implode(",",$this->input->post('oldprofessional_skill')).','.$this->input->post('newprofessional_skill');
            $profressional_skill = rtrim($profressional_skill,",");
            /*****Remove Space*****/
            $skill_array=explode(',',$profressional_skill);

            if(count($skill_array)>0){
                foreach($skill_array as $arr){
                    $proskill[]=trim($arr);
                }
            } 
        }else{
            $profressional_skill = $this->input->post('newprofessional_skill');
            /****Remove Space*****/
            $skill_array=explode(',',$profressional_skill);
            if(count($skill_array)>0){
                foreach($skill_array as $arr){
                    $proskill[]=trim($arr);
                }
            }

        }

        $profressional_skill=implode(',',$proskill);

        if(!empty($this->input->post('oldadditional_services'))){
            $additional_services = implode(",",$this->input->post('oldadditional_services')).','.$this->input->post('newadditional_services');     
            $additional_services = rtrim($additional_services,",");     
        }else{  
            $additional_services = $this->input->post('newadditional_services');
        }   

        if(!empty($this->input->post('cnewpassword'))){
            $oldpass = $this->input->post('oldpassword');
            $newpass = $this->input->post('newpassword');
            $cnewpass = $this->input->post('cnewpassword');

            $user_id = get_current_user_id();
            $condition=array('id'=>$user_id);                                                                  
            $user_data = get_where('tb_users',$condition,'row');
            $hashpassword = $user_data->password;
            $checkoldpassword = password_check($oldpass,$hashpassword);

            $userdata = array(
                'firstname' => $this->input->post('firstname'),
                'lastname' => $this->input->post('lastname'),                                         
                'website_link' => $this->input->post('website_link'), 
                'password' => generate_password($this->input->post('cnewpassword')),                
                'phone' => $this->input->post('phone'),
                'zip' => $this->input->post('zip'),
                'city' => $this->input->post('city'),
                'state' => $this->input->post('state'),
                'country' => $this->input->post('country'),
                'user_category' => $this->input->post('user_category'),
                'current_position' => $this->input->post('current_position'),
                'working_at' => $this->input->post('working_at'),
                'professional_skill' => $profressional_skill, 
                'additional_services' => $additional_services                       
            );
            if($this->input->post('noti_msg')){
                $userdata['message_notification'] = 1;
            }else{
                $userdata['message_notification'] = 0;
            }
            if($this->input->post('noti_fr_req')){
                $userdata['friend_request_received_notification'] = 1;
            }else{
                $userdata['friend_request_received_notification'] = 0;
            }
            if($this->input->post('noti_fr_ac')){
                $userdata['friend_request_acceptance_notification'] = 1;
            }else{
                $userdata['friend_request_acceptance_notification'] = 0;
            }
            if($this->input->post('noti_job_ac')){
                $userdata['job_request_acceptance_notification'] = 1;
            }else{
                $userdata['job_request_acceptance_notification'] = 0;
            }
            if($this->input->post('review_notification')){
                $userdata['review_notification'] = 1;
            }else{
                $userdata['review_notification'] = 0;
            }
            if($this->input->post('display_phone')){
                $userdata['display_phone'] = 1;
            }else{
                $userdata['display_phone'] = 0;
            }
            if($this->input->post('display_website')){
                $userdata['display_website'] = 1;
            }else{
                $userdata['display_website'] = 0;
            }
            if(!empty($this->input->post('oldpassword'))){

                if($checkoldpassword=='verified'){

                    if($newpass == $cnewpass){                                                 

                        $user_id = get_current_user_id();

                        $condition=array('id'=>$user_id);  
                        $this->session->set_userdata('user_login_type','');
                        $update = update_data('tb_users',$userdata,$condition);

                        if($update){ 
                            $this->session->unset_userdata('id');
                            $this->session->sess_destroy();             
                            redirect('login');
                        }
                    }else{
                        $this->session->set_flashdata('updatemsg','<div class="alert alert-danger text-center">Password is Not Match Plz Try Again!!!</div>');
                        redirect('profile'); 
                    }

                }else{
                    $this->session->set_flashdata('updatemsg','<div class="alert alert-danger text-center">Your Current Password is Wrong Plz Enter Correct Password!!!</div>');
                    redirect('profile'); 
                } 
            }
            else{       
                if($newpass == $cnewpass){

                    $user_id = get_current_user_id();

                    $condition=array('id'=>$user_id);  

                    $update = update_data('tb_users',$userdata,$condition);
                    if($update){ 
                        $this->session->unset_userdata('id');
                        $this->session->sess_destroy();             
                        redirect('login');
                    }
                }else{
                    $this->session->set_flashdata('updatemsg','<div class="alert alert-danger text-center">Password is Not Match Plz Try Again!!!</div>');
                    redirect('profile'); 
                }
            }                                          
        }

        else
        { 
            $userdata = array(
                'firstname' => $this->input->post('firstname'),
                'lastname' => $this->input->post('lastname'),
                'website_link' => $this->input->post('website_link'),													
                'phone' => $this->input->post('phone'),
                'zip' => $this->input->post('zip'),
                'city' => $this->input->post('city'),
                'state' => $this->input->post('state'),
                'country' => $this->input->post('country'),
                'user_category' => $this->input->post('user_category'),
                'current_position' => $this->input->post('current_position'),
                'working_at' => $this->input->post('working_at'),
                'professional_skill' => $profressional_skill,	
                'additional_services' => $additional_services													
            );
            if($this->input->post('noti_msg')){
                $userdata['message_notification'] = 1;
            }else{
                $userdata['message_notification'] = 0;
            }
            if($this->input->post('noti_fr_req')){
                $userdata['friend_request_received_notification'] = 1;
            }else{
                $userdata['friend_request_received_notification'] = 0;
            }
            if($this->input->post('noti_fr_ac')){
                $userdata['friend_request_acceptance_notification'] = 1;
            }else{
                $userdata['friend_request_acceptance_notification'] = 0;
            }
            if($this->input->post('noti_job_ac')){
                $userdata['job_request_acceptance_notification'] = 1;
            }else{
                $userdata['job_request_acceptance_notification'] = 0;
            }
            if($this->input->post('review_notification')){
                $userdata['review_notification'] = 1;
            }else{
                $userdata['review_notification'] = 0;
            }
            if($this->input->post('display_phone')){
                $userdata['display_phone'] = 1;
            }else{
                $userdata['display_phone'] = 0;
            }
            if($this->input->post('display_website')){
                $userdata['display_website'] = 1;
            }else{
                $userdata['display_website'] = 0;
            }
            $user_id = get_current_user_id();

            $condition=array('id'=>$user_id); 	

            $update = update_data('tb_users',$userdata,$condition);

            if($update)
            { 
                $this->session->set_flashdata('updatemsg','<div class="alert alert-success text-center">You are Successfully Updated your Profile!</div>');               	
                redirect('profile');
            }
            else
            {
                $this->session->set_flashdata('updatemsg','<div class="alert alert-danger text-center">error in update your profile</div>');
                redirect('profile');	
            }
        }


    }
//************************************/
    public function Checkoldpassword(){
        if($this->input->server('REQUEST_METHOD') == 'POST'){ 
            $userdata=json_decode($this->input->post('userdata'));
            $oldpassword = $userdata->oldpassword;
            $user_id = get_current_user_id();
            $condition=array('id'=>$user_id); 			     					                                             
            $user_data = get_where('tb_users',$condition,'row');
            $hashpassword = $user_data->password;
            $checkoldpassword = password_check($oldpassword,$hashpassword);
            if($checkoldpassword=='verified'){
                $arr['result']=1;
            }
            else{
                $arr['result']=0;
            }
        }
        else{
            $arr['result']=0;

        }     
        echo json_encode($arr);
    }

    /*for saving ratings of the user*/
    public function ratings(){
        if(!$this->input->is_ajax_request()){
            echo json_encode(array('response'=>'Invalid request'));
        }
        if($this->checkUserLogin()){
            $this->form_validation->set_rules('ques1','Question 1','trim|required');
            $this->form_validation->set_rules('ques2','Question 2','trim|required');
            $this->form_validation->set_rules('ques3','Question 3','trim|required');
            $this->form_validation->set_rules('ques4','Question 4','trim|required');
            $this->form_validation->set_rules('ques5','Question 5','trim|required');
            $this->form_validation->set_rules('message','Message','trim|required');
            if($this->form_validation->run() == FALSE) 
            { 
                $ret=array('status'=>'Failed_ans','msg'=>'All answers are required.','rated_to'=>$this->input->post('rated_to'));
            }else{       

                if($this->input->post()){
                    $dataInsert['rated_by_user'] = get_current_user_id();
                    $sender = $this->common_model->getsingle(USERS,array('id'=>get_current_user_id()));
                    if(!empty($sender) && $sender->business_name!=''){
                        $senderName = $sender->business_name;
                    }else{
                        $senderName = $sender->firstname." ".$sender->lastname;
                    }
                    $receiver = $this->common_model->getsingle(USERS,array('id'=>$this->session->userdata('rated_to_')));
                    $receiverReviewNotification = 0;
                    if(!empty($receiver)){
                        $receiverName = $receiver->firstname;
                        $receiverReviewNotification = $receiver->review_notification;
                        $receiverEmail = $receiver->email;
//$receiverEmail = "priyanka.pixlrit@gmail.com";
                    }
                    // echo  $this->input->post('rated_to');die;
                    $dataInsert['rated_to_user'] = $this->session->userdata('rated_to_');
                    $userComapny = $this->common_model->getsingle(REQUESTS,array('sender'=>$dataInsert['rated_to_user']),'','id','DESC');
                    if(!empty($userComapny))
                        $dataInsert['company_id'] = $userComapny->receiver;
                    else
                        $dataInsert['company_id'] = 0;
                    $ratingsData = $this->common_model->getsingle(RATINGS,$dataInsert);
                    if($this->input->post('ques1'))
                        $dataInsert['ques_1'] = $this->input->post('ques1');
                    if($this->input->post('ques2'))
                        $dataInsert['ques_2'] = $this->input->post('ques2');
                    if($this->input->post('ques3'))
                        $dataInsert['ques_3'] = $this->input->post('ques3');
                    if($this->input->post('ques4'))
                        $dataInsert['ques_4'] = $this->input->post('ques4');
                    if($this->input->post('ques5'))
                        $dataInsert['ques_5'] = $this->input->post('ques5');
                    $dataInsert['message'] = $this->input->post('message');
                    $dataInsert['rate_date'] = date('Y-m-d H:i:s');
                    if(empty($ratingsData)){
                        $ins = $this->common_model->insertData(RATINGS, $dataInsert);
                        if($ins){
                            $ret=array('status'=>'success');

                        }
                    }else{
                        $this->common_model->updateFields(RATINGS,$dataInsert,array('id'=>$ratingsData->id));
                        $ret=array('status'=>'success');
                    }
                    if($receiverReviewNotification == 1){
                        $from = "noreply@workadvisor.co";
                        $config['protocol'] = 'ssmtp';
                        $config['smtp_host'] = 'ssl://ssmtp.gmail.com';
                        $config['mailtype'] = 'html';
                        $config['newline'] = '\r\n';
                        $config['charset'] = 'utf-8';
                        $this->load->library('email', $config);
                        $this->email->initialize($config);
                        $subject = 'Notfication for Reviews';
                        $message = '';
                        $message .= ucfirst($senderName)." write you a review.";
                        $mailData = array();
                        $mailData['message'] = $message;
                        $mailData['username'] = ucfirst($receiverName);
                        $message = $this->load->view('frontend/mailtemplate',$mailData,true);
                        $this->email->from($from);
                        $this->email->to($receiverEmail);
                        $this->email->subject($subject);
                        $this->email->message($message);
                        if($this->email->send()){
                        } 
                    }
                }
            }
        }else{
            $ret=array('status'=>'Failed','msg'=>'Login first');
        }
        echo json_encode($ret);
        exit;
    }

    /*Edit post*/
    public function editPost(){
        if($this->input->is_ajax_request()){
            $postID = $this->input->post('id');
            $data['postData'] = $this->common_model->getsingle(POSTS,array('id'=>$postID));
            $this->load->view('frontend/modal_edit',$data);
        }
    }

    /*To unfriend*/
    public function unfriend(){
        if($_POST){
            $record = $this->input->post('record');
            if($this->common_model->deleteData(FRIENDS,array('user_one_id'=>$record,'user_two_id'=>get_current_user_id()))){
                echo json_encode(array('status'=>1));
            }else if($this->common_model->deleteData(FRIENDS,array('user_one_id'=>get_current_user_id(),'user_two_id'=>$record))){
                echo json_encode(array('status'=>1));
            }
        }
    }


      /*To leave job*/
    public function leaveJob(){
        if($_POST){
            $record = $this->input->post('record');
            if($this->common_model->deleteData(REQUESTS,array('receiver'=>$record,'sender'=>get_current_user_id()))){
                echo json_encode(array('status'=>1));
            }
        }
    }


    /*For uploading document files*/
    public function uploadDocFiles(){
	   $directoryID = $_POST['directoryid'];
		
       $filesCount = count($_FILES['files']['name']);
       $userData = $this->common_model->getsingle(USERS,array('id'=>get_current_user_id()));
        if($filesCount>0){
			/* if file is uploading outside the directory */
            for($i = 0; $i < $filesCount; $i++){
                $_FILES['docfile']['name'] = $_FILES['files']['name'][$i];
                $_FILES['docfile']['type'] = $_FILES['files']['type'][$i];
                $_FILES['docfile']['tmp_name'] = $_FILES['files']['tmp_name'][$i];
                $_FILES['docfile']['error'] = $_FILES['files']['error'][$i];
                $_FILES['docfile']['size'] = $_FILES['files']['size'][$i];
                $config['upload_path'] = FCPATH.'uploads/docs/';
                $path=$config['upload_path'];
                $config['allowed_types'] = 'csv|xls|txt|pdf|doc|docx|xlsx';
                $config['overwrite'] = '1';
                $this->load->library('upload', $config);
                $this->upload->initialize($config);
                if($this->upload->do_upload('docfile')){
                    $fileData = $this->upload->data();
                    $fileName = $fileData['file_name'];
                    $dataInsert['user_id'] = get_current_user_id();
                    $dataInsert['albums']  = 'uploads/docs/'.$fileName;
					if($directoryID != '') {
						$dataInsert['folder_id'] = $directoryID;
					}
                    $dataInsert['name']  = $fileName;
                    $dataInsert['created_date'] = date('Y-m-d H:i:s');
                   // $dataInsert['view_type'] = $this->input->post('view_type');
                    $albumData = $this->common_model->getsingle(ALBUMS,array('user_id'=>$dataInsert['user_id'],'albums'=>$dataInsert['albums']));
                    if(empty($albumData))
                        $ins = $this->common_model->insertData(ALBUMS, $dataInsert);
                    // $dataUpdate['view_type'] = $this->input->post('view_type');
                    // $this->common_model->updateFields(ALBUMS,$dataUpdate,array('user_id'=>$dataInsert['user_id']));
                }else{
                    print_r($this->upload->display_errors());
                }
            }
			
			$html='';
			if($directoryID != '') {
				$albumData=$this->common_model->getAllwhere(ALBUMS,array('user_id'=>$dataInsert['user_id'], 'folder_id' => $directoryID));
				$adddingType = 'inDir';
				$html = "<a id='directoryBack' href='javascript:void(0)' onclick='directoryBack()'>Back</a>";
			} else {
				$albumData=$this->common_model->getAllwhere(ALBUMS,array('user_id'=>$dataInsert['user_id'],'folder_id' => 0));
				$adddingType = 'Direct';
				
				/* html of directory */
				
				$albumFolderData = $this->common_model->getAllwhere(ALBUM_DIR,array('user_id'=>get_current_user_id()));
					if(!empty($albumFolderData)) {
						foreach($albumFolderData['result'] as $folderDatas) {
							$checked11 = '';
							$checked22 = '';
							$checked33  ='';
							if($folderDatas->dir_view_type == 3){
								$checked33 = 'checked=checked';
							} else if($folderDatas->dir_view_type == 2){
								$checked22 = 'checked=checked';
							} else{
								$checked11 = 'checked=checked';
							} 
							$html.='
                        <div class="col-md-3 col-12" onclick="setIdDir('.$folderDatas->id.')">
                        <div class="album_icon">
                        <a href="javascipt:void(0)"  onclick="enterInFolder('.$folderDatas->id.','.get_current_user_id().')"">
                        <div class="jerry">
                        <div class="cat_img but_imgsize">
                        <img src="'.base_url().'/assets/images/folder_image.png">
                        </div>'.$folderDatas->dir_name.'</div>
                        </a>
                        <i class="fa fa-remove" data-toggle="modal" onclick="albumFolderDelete('.$folderDatas->id.')"></i>
                        <input class="view_type" type="radio" value="1" name="view_'.$folderDatas->id.'" id="view_'.$folderDatas->id.'"  data-vid="'.$folderDatas->id.'" '.$checked11.'>Public
                        <input class="view_type" type="radio" value="2" name="view_'.$folderDatas->id.'" id="view_'.$folderDatas->id.'" '.$checked22.' data-vid="'.$folderDatas->id.'">Private';
                        if(!empty($userData) && $userData->user_role == 'Employer'){
                        $html.='<input class="view_type_folder" type="radio" value="3" name="view_'.$folderDatas->id.'" id="view_'.$folderDatas->id.'" '.$checked33.' data-vid="'.$folderDatas->id.'">Employee';
							}
						$html .=  '</div>
								</div>';;
						}
					}
					//$albumFolderData['result'];
					/* html of directory end */
			}			
				if(!empty($albumData['result'])){
					foreach($albumData['result'] as $row){
						$checked1 = '';
						$checked2 = '';
						$checked3 = '';
						if($row->view_type == 3){
							$checked3 = 'checked=checked';
						}
						else if($row->view_type == 2){
							$checked2 = 'checked=checked';
						}else{
							$checked1 = 'checked=checked';
						}
						$file_ext = pathinfo($row->name,PATHINFO_EXTENSION);
						if($file_ext == 'doc' || $file_ext == 'docs' || $file_ext == 'docx'){
							$image = base_url().'assets/images/doc.png';
						}
						else if($file_ext == 'xlsx'){
							$image = base_url().'assets/images/xlsx.png';
						}else if($file_ext == 'pdf'){
							$image = base_url().'assets/images/pdf.png';
						}
						$html.='
						<div class="col-md-3 col-12" onclick="setID('.$row->id.');">
						<div class="album_icon">
						<a href="'.base_url().$row->albums.'" download="">
						<div class="jerry">
						<div class="cat_img but_imgsize">
						<img src="'.$image.'">
						</div>'.$row->name.'</div>
						</a>
						<i class="fa fa-remove" data-toggle="modal" data-target="#modalAlbumDelete"></i>';

                        if($directoryID!=''){
                        }
                        else{
    						$html.='<input class="view_type" type="radio" value="1" name="view_'.$row->id.'" id="view_'.$row->id.'"  data-vid="'.$row->id.'" '.$checked1.'>Public
    						<input class="view_type" type="radio" value="2" name="view_'.$row->id.'" id="view_'.$row->id.'" '.$checked2.' data-vid="'.$row->id.'">Private';
    						if(!empty($userData) && $userData->user_role == 'Employer'){
    							$html.='<input class="view_type" type="radio" value="3" name="view_'.$row->id.'" id="view_'.$row->id.'" '.$checked3.' data-vid="'.$row->id.'">Employee';
    						}
                        }


					   $html.= '</div>
						</div>
						';
					}
				}
			
			/* if file is uploading inside the directory */
            echo json_encode(array('status'=>1,'html'=>$html,'adddingType' => $adddingType));
        }else{
            echo json_encode(array('status'=>0));
        }
    }

    public function deleteAlbumData(){
        $record = $this->input->post('record');
        $userData = $this->common_model->getsingle(USERS,array('id'=>get_current_user_id()));
		$dlt = $this->common_model->deleteData(ALBUMS,array('id'=>$record));
		if($dlt){
            // echo json_encode(array('status'=>1));
			$html='';
			$html .= '<div id="fileSuccessmain">';
			/* html of directory */
				$albumFolderData = $this->common_model->getAllwhere(ALBUM_DIR,array('user_id'=>get_current_user_id()));
					if(!empty($albumFolderData)) {
						foreach($albumFolderData['result'] as $folderDatas) {
							$checked11 = '';
							$checked22 = '';
							$checked33  ='';
							if($folderDatas->dir_view_type == 3){
								$checked33 = 'checked=checked';
							} else if($folderDatas->dir_view_type == 2){
								$checked22 = 'checked=checked';
							} else{
								$checked11 = 'checked=checked';
							} 
							$html.='
                        <div class="col-md-3 col-12" onclick="setIdDir('.$folderDatas->id.')">
                        <div class="album_icon">
                        <a href="javascipt:void(0)"  onclick="enterInFolder('.$folderDatas->id.','.get_current_user_id().')"">
                        <div class="jerry">
                        <div class="cat_img but_imgsize">
                        <img src="'.base_url().'/assets/images/folder_image.png">
                        </div>'.$folderDatas->dir_name.'</div>
                        </a>
                        <i class="fa fa-remove" data-toggle="modal" onclick="albumFolderDelete('.$folderDatas->id.')"></i>
                        <input class="view_type_folder" type="radio" value="1" name="view_'.$folderDatas->id.'" id="view_'.$folderDatas->id.'"  data-vid="'.$folderDatas->id.'" '.$checked11.'>Public
                        <input class="view_type_folder" type="radio" value="2" name="view_'.$folderDatas->id.'" id="view_'.$folderDatas->id.'" '.$checked22.' data-vid="'.$folderDatas->id.'">Private';
						if(!empty($userData) && $userData->user_role == 'Employer'){
                        $html.='<input class="view_type_folder" type="radio" value="3" name="view_'.$folderDatas->id.'" id="view_'.$folderDatas->id.'" '.$checked33.' data-vid="'.$folderDatas->id.'">Employee';
							}
                        $html .= '</div></div>';
						}
					}
			//$albumFolderData['result'];
			/* html of directory end */
			$albumData=$this->common_model->getAllwhere(ALBUMS,array('user_id'=>get_current_user_id(),'folder_id' => 0));
            if(!empty($albumData['result'])){
                foreach($albumData['result'] as $row){
                    $checked1 = '';
                    $checked2 = '';
                    $checked3 = '';
                    if($row->view_type == 3){
                        $checked3 = 'checked=checked';
                    }
                    else if($row->view_type == 2){
                        $checked2 = 'checked=checked';
                    }else{
                        $checked1 = 'checked=checked';
                    }
                    $file_ext = pathinfo($row->name,PATHINFO_EXTENSION);
                    if($file_ext == 'doc' || $file_ext == 'docs' || $file_ext == 'docx'){
                        $image = base_url().'assets/images/doc.png';
                    }
                    else if($file_ext == 'xlsx'){
                        $image = base_url().'assets/images/xlsx.png';
                    }else if($file_ext == 'pdf'){
                        $image = base_url().'assets/images/pdf.png';
                    }
                    $html.='
                    <div class="col-md-3 col-12" onclick="setID('.$row->id.');">
                    <div class="album_icon">
                    <a href="'.base_url().$row->albums.'" download="">
                    <div class="jerry">
                    <div class="cat_img but_imgsize">
                    <img src="'.$image.'">
                    </div>'.$row->name.'</div>
                    </a>
                    <i class="fa fa-remove" data-toggle="modal" data-target="#modalAlbumDelete"></i>
                    <input class="view_type" type="radio" value="1" name="view_'.$row->id.'" id="view_'.$row->id.'"  data-vid="'.$row->id.'" '.$checked1.'>Public
                    <input class="view_type" type="radio" value="2" name="view_'.$row->id.'" id="view_'.$row->id.'" '.$checked2.' data-vid="'.$row->id.'">Private';
                    if(!empty($userData) && $userData->user_role == 'Employer'){
                        $html.='<input class="view_type" type="radio" value="3" name="view_'.$row->id.'" id="view_'.$row->id.'" '.$checked3.' data-vid="'.$row->id.'">Employee';
                    }
                   $html.= '</div>
                    </div>
                    ';
                }
               
            }
$html .= '</div>			
			<div id="fileSuccessDir">
	</div>';
			 echo json_encode(array('status'=>1,'html'=>$html));
        }
    }
	/* folder delete */
	
	public function deleteAlbumfolderData(){
        $record = $this->input->post('record');
        $userData = $this->common_model->getsingle(USERS,array('id'=>get_current_user_id()));
		
		if($_POST['folderrecord_id'] == '') {
			$dlt = $this->common_model->deleteData(ALBUMS,array('id'=>$record));
		} else {
			$dlt = $this->common_model->deleteData(ALBUM_DIR,array('id'=>$_POST['folderrecord_id']));
			$this->common_model->deleteData(ALBUMS,array('folder_id'=>$_POST['folderrecord_id']));
		}
        if($dlt){
            // echo json_encode(array('status'=>1));
			  $html='';
			$html .= '<div id="fileSuccessmain">';
			/* html of directory */
				
				$albumFolderData = $this->common_model->getAllwhere(ALBUM_DIR,array('user_id'=>get_current_user_id()));
					if(!empty($albumFolderData)) {
						foreach($albumFolderData['result'] as $folderDatas) {
							$checked11 = '';
							$checked22 = '';
							$checked33  ='';
							if($folderDatas->dir_view_type == 3){
								$checked33 = 'checked=checked';
							} else if($folderDatas->dir_view_type == 2){
								$checked22 = 'checked=checked';
							} else{
								$checked11 = 'checked=checked';
							} 
							$html.='
								<div class="col-md-3 col-12" onclick="setIdDir('.$folderDatas->id.')">
								<div class="album_icon">
								<a href="javascipt:void(0)"  onclick="enterInFolder('.$folderDatas->id.','.get_current_user_id().')"">
								<div class="jerry">
								<div class="cat_img but_imgsize">
								<img src="'.base_url().'/assets/images/folder_image.png">
								</div>'.$folderDatas->dir_name.'</div>
								</a>
								<i class="fa fa-remove" data-toggle="modal" onclick="albumFolderDelete('.$folderDatas->id.')"></i>
								<input class="view_type_folder" type="radio" value="1" name="view_'.$folderDatas->id.'" id="view_'.$folderDatas->id.'"  data-vid="'.$folderDatas->id.'" '.$checked11.'>Public
								<input class="view_type_folder" type="radio" value="2" name="view_'.$folderDatas->id.'" id="view_'.$folderDatas->id.'" '.$checked22.' data-vid="'.$folderDatas->id.'">Private';
								
								if(!empty($userData) && $userData->user_role == 'Employer'){
                        $html.='<input class="view_type_folder" type="radio" value="3" name="view_'.$folderDatas->id.'" id="view_'.$folderDatas->id.'" '.$checked33.' data-vid="'.$folderDatas->id.'">Employee';
							}
					
							  $html .=  '</div>
								</div>';
						}
					}
			//$albumFolderData['result'];
			/* html of directory end */
			$albumData=$this->common_model->getAllwhere(ALBUMS,array('user_id'=>get_current_user_id(),'folder_id' => 0));
          
            if(!empty($albumData['result'])){
                foreach($albumData['result'] as $row){
                    $checked1 = '';
                    $checked2 = '';
                    $checked3 = '';
                    if($row->view_type == 3){
                        $checked3 = 'checked=checked';
                    }
                    else if($row->view_type == 2){
                        $checked2 = 'checked=checked';
                    }else{
                        $checked1 = 'checked=checked';
                    }
                    $file_ext = pathinfo($row->name,PATHINFO_EXTENSION);
                    if($file_ext == 'doc' || $file_ext == 'docs' || $file_ext == 'docx'){
                        $image = base_url().'assets/images/doc.png';
                    }
                    else if($file_ext == 'xlsx'){
                        $image = base_url().'assets/images/xlsx.png';
                    }else if($file_ext == 'pdf'){
                        $image = base_url().'assets/images/pdf.png';
                    }
                    $html.='
                    <div class="col-md-3 col-12" onclick="setID('.$row->id.');">
                    <div class="album_icon">
                    <a href="'.base_url().$row->albums.'" download="">
                    <div class="jerry">
                    <div class="cat_img but_imgsize">
                    <img src="'.$image.'">
                    </div>'.$row->name.'</div>
                    </a>
                    <i class="fa fa-remove" data-toggle="modal" data-target="#modalAlbumDelete"></i>
                    <input class="view_type" type="radio" value="1" name="view_'.$row->id.'" id="view_'.$row->id.'"  data-vid="'.$row->id.'" '.$checked1.'>Public
                    <input class="view_type" type="radio" value="2" name="view_'.$row->id.'" id="view_'.$row->id.'" '.$checked2.' data-vid="'.$row->id.'">Private';
                    if(!empty($userData) && $userData->user_role == 'Employer'){
                        $html.='<input class="view_type" type="radio" value="3" name="view_'.$row->id.'" id="view_'.$row->id.'" '.$checked3.' data-vid="'.$row->id.'">Employee';
                    }
                   $html.= '</div>
                    </div>
                    ';
                }
               
            }
			$html .= '</div>			
				<div id="fileSuccessDir">
			</div>';
			 echo json_encode(array('status'=>1,'html'=>$html));
        }
    }
	public function changeViewAccess(){
        $id = $this->input->post('id');
        //$userData = $this->common_model->getsingle(USERS,array('id'=>get_current_user_id()));
        $dataUpdate= array();
        // echo $this->input->post('file_folder');die;
        if($this->input->post('file_folder') == 'files') {
			$dataUpdate['view_type'] = $this->input->post('view_type');
			$this->common_model->updateFields(ALBUMS,$dataUpdate,array('id'=>$id));
           // lq();
		} else {
			$dataUpdate['dir_view_type'] = $this->input->post('view_type');
			$this->common_model->updateFields(ALBUM_DIR,$dataUpdate,array('id'=>$id));
           // lq();
		}
    }
	function getDocuments(){
        $userData = $this->common_model->getsingle(USERS,array('id'=>get_current_user_id()));
        $user_id = $this->input->post('user_id');
        $search_doc = $this->input->post('search_doc');
        if($search_doc!=''){
            $where1 = "user_id=$user_id and name like '%".$search_doc."%' and folder_id=0";
            $where2 = "user_id=$user_id and dir_name like '%".$search_doc."%'";
        }
        else{
            $where1 = "user_id=$user_id and folder_id=0";
            $where2 = "user_id=$user_id";
        } 
        if($this->input->post('other') == 'other'){
            $albumDatas = $this->common_model->getAllwhere(ALBUMS,$where1);
            $albumFolderDatas = $this->common_model->getAllwhere(ALBUM_DIR,$where2);
            $employees = $this->common_model->getAllwhere(REQUESTS,array('receiver'=>$user_id));
            $companyEmployees = array();

            if(!empty($employees['result'])){
                foreach($employees['result'] as $row){
                    $companyEmployees[] = $row->sender;
                }
            }
            if(!empty($albumDatas['result'])){
                $count = 0;
                foreach($albumDatas['result'] as $row){
                    if($row->view_type == 1 || ($row->view_type == 3 && in_array(get_current_user_id(),$companyEmployees))){
                        $albumData['result'][$count] = new stdClass();
                        $albumData['result'][$count]->id = $row->id;
                        $albumData['result'][$count]->name = $row->name;
                        $albumData['result'][$count]->albums = $row->albums;
                        $albumData['result'][$count]->view_type = $row->view_type;
                        $count++;
                    }
                }
            }

            if(!empty($albumFolderDatas['result'])){
                $count = 0;
                foreach($albumFolderDatas['result'] as $row){
                    if($row->dir_view_type == 1 || ($row->dir_view_type == 3 && in_array(get_current_user_id(),$companyEmployees))){
                        $albumFolderData['result'][$count] = new stdClass();
                        $albumFolderData['result'][$count]->id = $row->id;
                        $albumFolderData['result'][$count]->dir_name = $row->dir_name;
                        $albumFolderData['result'][$count]->dir_view_type = $row->dir_view_type;
                        $count++;
                    }
                }
            }
        }
        else{
            $albumData=$this->common_model->getAllwhere(ALBUMS,$where1);
            $albumFolderData=$this->common_model->getAllwhere(ALBUM_DIR,$where2);
        }
            $html='<div id="fileSuccessmain">';
            if(!empty($albumData['result']) || !empty($albumFolderData['result'])){
                if(!empty($albumFolderData['result'])) {
                    //pr($albumFolderData['result']);
                    foreach($albumFolderData['result'] as $folderDatas) {
                        $checked11 = '';
                        $checked22 = '';
                        $checked33 = '';
                        if($folderDatas->dir_view_type == 3){
                            $checked33 = 'checked=checked';
                        } else if($folderDatas->dir_view_type == 2){
                            $checked22 = 'checked=checked';
                        } else{
                            $checked11 = 'checked=checked';
                        } 
                        $html.='
                        <div class="col-md-3 col-12" onclick="setIdDir('.$folderDatas->id.')">
                        <div class="album_icon">';
                        if($this->input->post('other') == 'other'){
                            $html.='<a href="javascipt:void(0)"  onclick="enterInFolder('.$folderDatas->id.','.$user_id.',1)">';
                        }else{
                            $html.='<a href="javascipt:void(0)"  onclick="enterInFolder('.$folderDatas->id.','.$user_id.')"">';
                        }
                        $html.='<div class="jerry">
                        <div class="cat_img but_imgsize">
                        <img src="'.base_url().'/assets/images/folder_image.png">
                        </div>'.$folderDatas->dir_name.'</div>
                        </a>';
                        if($this->input->post('other') != 'other'){
                            $html.='<i class="fa fa-remove" data-toggle="modal" onclick="albumFolderDelete('.$folderDatas->id.')"></i>
                            <input class="view_type" type="radio" value="1" name="view_'.$folderDatas->id.'" id="view_'.$folderDatas->id.'"  data-vid="'.$folderDatas->id.'" '.$checked11.' data-views="folders">Public
                            <input class="view_type" type="radio" value="2" name="view_'.$folderDatas->id.'" id="view_'.$folderDatas->id.'" '.$checked22.' data-vid="'.$folderDatas->id.'" data-views="folders">Private';
                        if(!empty($userData) && $userData->user_role == 'Employer'){
                            $html.='<input class="view_type" type="radio" value="3" name="view_'.$folderDatas->id.'" id="view_'.$folderDatas->id.'" '.$checked33.' data-vid="'.$folderDatas->id.'" data-views="folders" data-views="folders">Employee
                           
                            '; 
                        }
                        }
                        $html.=' </div>
                            </div>';
                    }
                }
                if(!empty($albumData['result'])){
                    foreach($albumData['result'] as $row){
                        $checked1 = '';
                        $checked2 = '';
                        $checked3 = '';
                        if($row->view_type == 3){
                            $checked3 = 'checked=checked';
                        }
                        else if($row->view_type == 2){
                            $checked2 = 'checked=checked';
                        }else{
                            $checked1 = 'checked=checked';
                        }
                        $file_ext = pathinfo($row->name,PATHINFO_EXTENSION);
                        if($file_ext == 'doc' || $file_ext == 'docs' || $file_ext == 'docx'){
                            $image = base_url().'assets/images/doc.png';
                        }
                        else if($file_ext == 'xlsx'){
                            $image = base_url().'assets/images/xlsx.png';
                        }else if($file_ext == 'pdf'){
                            $image = base_url().'assets/images/pdf.png';
                        }
                        $html.='
                        <div class="col-md-3 col-12" onclick="setID('.$row->id.');">
                        <div class="album_icon">
                        <a href="'.base_url().$row->albums.'" download="">
                        <div class="jerry">
                        <div class="cat_img but_imgsize">
                        <img src="'.$image.'">
                        </div>'.$row->name.'</div>
                        </a>';
                        if($this->input->post('other') != 'other'){
                            $html.='<i class="fa fa-remove" data-toggle="modal" data-target="#modalAlbumDelete"></i>';
                        }
                        if($this->input->post('other') != 'other'){
                            $html.='<input class="view_type" type="radio" value="1" name="view_'.$row->id.'" id="view_'.$row->id.'"  data-vid="'.$row->id.'" '.$checked1.'>Public
                            <input class="view_type" type="radio" value="2" name="view_'.$row->id.'" id="view_'.$row->id.'" '.$checked2.' data-vid="'.$row->id.'">Private';
                            if(!empty($userData) && $userData->user_role == 'Employer'){
                                $html.='<input class="view_type" type="radio" value="3" name="view_'.$row->id.'" id="view_'.$row->id.'" '.$checked3.' data-vid="'.$row->id.'">Employee';
                            }
                        }

                       $html.= '</div>
                        </div>
                        ';
                    }
                }
                $html.='</div><div id="fileSuccessDir">
                    </div>';
                echo json_encode(array('status'=>1,'html'=>$html));
            }else{
                echo json_encode(array('status'=>0));
            }
    }
    public function saveProfileData(){
        // pr($_POST);
        $userdata = array(
            'firstname' => $this->input->post('firstname'),
            'lastname' => $this->input->post('lastname'),    
            'user_category' => $this->input->post('user_category'),                                     
            'website_link' => $this->input->post('website_link'),                 
            'phone' => $this->input->post('phone'),
            'zip' => $this->input->post('zip'),
            'city' => $this->input->post('city'),
            'state' => $this->input->post('state'),
            'country' => $this->input->post('country'),
            'current_position' => $this->input->post('current_position'),                  
        );
        if($this->input->post('display_phone')){
            $userdata['display_phone'] = 1;
        }else{
            $userdata['display_phone'] = 0;
        }
        if($this->input->post('display_website')){
            $userdata['display_website'] = 1;
        }else{
            $userdata['display_website'] = 0;
        }  
        $userdata['basic_info'] = 1;
        $user_id = get_current_user_id();
        $condition=array('id'=>$user_id);  
        $this->session->set_userdata('user_login_type','');
        $update = update_data('tb_users',$userdata,$condition);
        if($update){
            redirect('profile');
        }
    }
	/* add directory */
	public function saveDirectory(){ 
		$userData = $this->common_model->getsingle(USERS,array('id'=>get_current_user_id()));
		$userRole = $userData->user_role;
		$dirName = $_POST['dirName'];
		$user_id = $_POST['user_id'];
		if($dirName != '' && $user_id != '') {
			$dataInsert['user_id']  = get_current_user_id();
			$dataInsert['dir_name']  = $dirName;
			$dataInsert['dir_view_type']  = 1;
			$this->common_model->insertData(ALBUM_DIR, $dataInsert);
			$insert_id = $this->db->insert_id();
			$arr['status'] = 'success';
			$arr['msg'] = 'folder created successfully';
			$arr['lastinsertedid']  = $insert_id;
			$arr['userRole']  = $userRole;
		} else {
			$arr['status'] = 'fail';
			$arr['msg'] = 'Something went wrong';
		}
		echo json_encode($arr); 
	}
	/* retrieve files from directory */
	public function retrieveDirectoryFiles(){ 
		$folderid = $_POST['folderid'];
		$userId = $_POST['userId'];
		$html = "<a id='directoryBack' href='javascript:void(0)' onclick='directoryBack()'>Back</a>";
        //echo $folderid."--".$userId;
		if($folderid != '' && $userId != '') {
			$folderdata=$this->common_model->getAllwhere(ALBUMS,array('user_id' => $userId, 'folder_id' => $folderid));
          //  print_r($folderdata);
			if(!empty($folderdata['result'])) {
				foreach($folderdata['result'] as $row) {
					$checked1 = '';
                    $checked2 = '';
                    $checked3 = '';
                    if($row->view_type == 3){
                        $checked3 = 'checked=checked';
                    }
                    else if($row->view_type == 2){
                        $checked2 = 'checked=checked';
                    }else{
                        $checked1 = 'checked=checked';
                    }
                    $file_ext = pathinfo($row->name,PATHINFO_EXTENSION);
                    if($file_ext == 'doc' || $file_ext == 'docs' || $file_ext == 'docx'){
                        $image = base_url().'assets/images/doc.png';
                    }
                    else if($file_ext == 'xlsx'){
                        $image = base_url().'assets/images/xlsx.png';
                    }else if($file_ext == 'pdf'){
                        $image = base_url().'assets/images/pdf.png';
                    }
                    $html.='
                    <div class="col-md-3 col-12" onclick="setID('.$row->id.');">
                    <div class="album_icon">
                    <a href="'.base_url().$row->albums.'" download="">
                    <div class="jerry">
                    <div class="cat_img but_imgsize">
                    <img src="'.$image.'">
                    </div>'.$row->name.'</div>
                    </a>';
                    if($this->input->post('other') != 'other'){
                        $html.='<i class="fa fa-remove" data-toggle="modal" data-target="#modalAlbumDelete"></i>';
                    }
                    // if($this->input->post('other') != 'other'){
                    //     $html.='<input class="view_type" type="radio" value="1" name="view_'.$row->id.'" id="view_'.$row->id.'"  data-vid="'.$row->id.'" '.$checked1.'>Public
                    //     <input class="view_type" type="radio" value="2" name="view_'.$row->id.'" id="view_'.$row->id.'" '.$checked2.' data-vid="'.$row->id.'">Private';
                    //     if(!empty($userData) && $userData->user_role == 'Employer'){
                    //         $html.='<input class="view_type" type="radio" value="3" name="view_'.$row->id.'" id="view_'.$row->id.'" '.$checked3.' data-vid="'.$row->id.'">Employee';
                    //     }
                    // }
					$html.= '</div>
                    </div>';
				}
			} 
			$arr['status'] = 'success';
			$arr['msg'] = $html;		
		} else {
			$arr['status'] = 'fail';
			$arr['msg'] = 'Something went wrong';
		}
		echo json_encode($arr); 
	}
}