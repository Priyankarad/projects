<?php
defined('BASEPATH') OR exit('No direct script access allowed');
ini_set('display_errors', 0);
class User extends My_Controller {
	public function __construct(){
		parent::__construct();
		$this->load->model('User_model');
	}
	public function index(){
		if($this->session->userdata('id')){
			redirect('');
		}else{
			$data['authUrl'] = $this->facebook->login_url();
			$data['loginURL'] = $this->googleplus->loginURL();			
			$this->frontendtemplates('signup',$data);
		}
	}
	/********************************/
	/************ Login ************/
	/********************************/
	public function login(){
		if($this->session->userdata('id')){
			redirect(site_url('profile'));
		}
		else{
			$data['authUrl'] = $this->facebook->login_url();
			$data['loginURL'] = $this->googleplus->loginURL();
			$this->frontendtemplates('login',$data);
		}	
	}
	/********************************/
	/************ Register Process ************/
	/********************************/
	public function registerprocess(){
		$firstname=$this->input->post('firstname');
		$lastname=$this->input->post('lastname');
		$email=$this->input->post('email');
		$password=$this->input->post('password');
		$result = $this->User_model->check_email($email);

		if(!empty($result)) {
			$this->session->set_flashdata('registermsg','
				<div class="alert alert-danger text-center">Oops!.  you are also registered please login here!!!</div>
				');
			redirect('register');
		} else {
			$userdata = array(
				'type' => 'normal',
				'firstname' => $firstname,
				'lastname' => $lastname,
				'email' => $email,
				'password' => generate_password($password),
				'profile' => DEFAULT_IMAGE,
				'status' => 'unverify'					
			);
			if($this->User_model->insert_user($userdata)) {
				if($this->User_model->sendEmail($email,$firstname)){
					$this->session->set_flashdata('registermsg', '
						<div class="alert alert-success text-center">Successfully registered. Please confirm the mail that has been sent to your email. </div>
						');
					redirect('register');
				}
			}
			else{						
				$this->session->set_flashdata('registermsg','
					<div class="alert alert-danger text-center">Error in registration!!!!!</div>
					');
				redirect('register');
			}						
		}
	}
	/********************************/
	/******** Confirm Email **********/
	/********************************/
	public function confirmEmail(){
		$hashcode = base64_decode($this->uri->segment(3));
		if($this->User_model->verifyEmail($hashcode)){
			$this->session->set_flashdata('updatemsg', '
				<div class="alert alert-success text-center">Email address is confirmed. Please contine to process</div>
				');
// $data['email'] = $hashcode;
//$this->frontendtemplates('create_category',$data);
			$this->create_category($hashcode);
		}else{
			$this->session->set_flashdata('loginmsg', '
				<div class="alert alert-danger text-center">Email address is not confirmed. Please try to re-register.</div>
				');
			redirect('login');
		}
	}
	/********************************/
	/********** Login Process *******/
	/********************************/
	public function loginprocess($review = false){
		$email = $this->input->post('email');
		$password = $this->input->post('password');
		$result = $this->User_model->check_email($email);            
		if(!empty($result)){
			$hashpassword = $result->password;
			$user_role = $result->user_role;
			$newpassword = password_check($password,$hashpassword);
			if($newpassword=='verified'){
				$result1=$this->User_model->user_login($email,$hashpassword);
				$status=$result1->status;
				$activated=$result1->active;
				if($activated==0){
					$this->session->set_flashdata('loginmsg','<div class="alert alert-danger text-center"> Your account has been deactivated. Contact To admin. </div>');
					redirect(base_url('login'));
					exit;
				}
				if($status=='verify'){ 
					$loginSession=array(
						'type' => 'facebook',
						'oauth_uid' => $result1->oauth_uid,
						'firstname' =>$result1->firstname,
						'lastname' => $result1->lastname,
						'email' => $result1->email,
						'gender' => $result1->gender,
						'lang' => $result1->lang,
						'profile_url' => $result1->profile_url,
						'profile' => $result1->profile,
						'status' => $result1->status
					);					
					$this->session->set_userdata('loggedIn', true);
					$this->session->set_userdata('userData',$loginSession);
					if($this->check_userrole()){
						if($review == 'review' && $this->input->post('userURL')){
								$url = $this->input->post('userURL')."?review=1";
								redirect($url);
						}else{
							if($this->session->userdata('message_link') && !empty($this->session->userdata('message_link'))){
								redirect($this->session->userdata('message_link'));
							}else{
								if($this->session->userdata('actual_link') && !empty($this->session->userdata('actual_link'))){
									redirect($this->session->userdata('actual_link')."?review=1");
								}else{
									if($result1->user_role == 'Performer'){
										redirect('profile');
									}else{
										redirect('businessprofile');														
									}
								}
							}
						}
					}else{
						$this->session->set_flashdata('updatemsg','
							<div class="alert alert-danger text-center">Build Profile</div>
							');
						$this->create_category($result1->email);
					}
				}else{
					$this->session->set_flashdata('loginmsg','
						<div class="alert alert-danger text-center">Oops!.  Please check your mail to verify your email address!!!</div>
						');
					redirect('login');
				}	                  
			}
			else{
				$this->session->set_flashdata('loginmsg','
					<div class="alert alert-danger text-center">Oops!.  Invalid username or password!!!</div>
					');
				redirect('login');	
			}
		} else
		{
			$this->session->set_flashdata('loginmsg','
				<div class="alert alert-danger text-center">Oops!.  Username Not Available, Please Register here!.!!!</div>
				');
			redirect('login');                               
		}
	} 
	/********************************/
	/*****Social Authentication*****/
	/********************************/
	public function social_authentication(){
		if($this->input->server('REQUEST_METHOD') == 'POST'){
			$userdata=json_decode($this->input->post('userdata'));
			$type=$userdata->type;
			$id=$userdata->id;
			$firstname=$userdata->first_name;
			$lastname=$userdata->last_name;
			$email=($userdata->email ?: '');
			if($type=='google')
			{
				$picture=$userdata->picture.'&size=1024'; 
			}
			else
			{
				$picture=$userdata->picture; 
			}
			if($this->session->userdata("id")){
				$arr['result']=2;
				$arr['msg']="Already logged in";
				echo json_encode($arr);
				exit();
			}   
			else{
				$details=$this->User_model->check_email($email);		           				          
				if(!empty($details)){	
					$this->session->set_userdata('loggedIn', true);
					$loginSession=array(
						'type' => 'facebook',
						'oauth_uid' => $details->oauth_uid,
						'firstname' =>$details->firstname,
						'lastname' => $details->lastname,
						'email' => $details->email,
						'gender' => $details->gender,
						'lang' => $details->lang,
						'profile_url' => $details->profile_url,
						'profile' => $details->profile,
						'status' => $details->status,
						'active' => 1
					);
					$this->session->set_userdata('userData',$loginSession);
//pr($this->session->userdata['userData']);
					$usermail= base64_encode($details->email);
					$arr['userdata']=$details->user_role;
					$arr['email']=$usermail;
					$arr['result']=1;
					$arr['msg']='login successfull'; 
					echo json_encode($arr);
					exit();
				}else{
					$arr_reg=array('type'=>$type,'firstname'=>$firstname,'lastname'=>$lastname,'email'=>$email,'password'=>'','profile'=>DEFAULT_IMAGE,'status'=>'verify','active'=>1);
					$register_user=$this->User_model->insert_user($arr_reg);
					$userDetails= $this->User_model->get_userdata($register_user);
					$this->session->set_userdata('loggedIn', true);
					$loginSession=array(
						'type' => 'facebook',
						'oauth_uid' => $userDetails->oauth_uid,
						'firstname' =>$userDetails->firstname,
						'lastname' => $userDetails->lastname,
						'email' => $userDetails->email,
						'gender' => $userDetails->gender,
						'lang' => $userDetails->lang,
						'profile_url' => $userDetails->profile_url,
						'profile' => $userDetails->profile,
						'status' => $userDetails->status
					);
					$this->session->set_userdata('userData',$loginSession);
//pr($this->session->userdata['userData']);
					$usermail= base64_encode($email);
					$arr['userdata']=$details;
					$arr['email']=$usermail;
					$arr['result']=1;
					$arr['msg']='login successfull';	              		               
				}
			}
		}else{
			$arr['result']=0;
			$arr['msg']='invalid argument supply';
		}     
		echo json_encode($arr);
	}
	/*********************************************/
	/************** CREATE CATEGORY **************/
	/*********************************************/
	public function create_category($email = ''){
		if($this->session->userdata('loggedIn')){
			$email=$this->session->userdata['userData']['email'];
			$data['email']=$email;
			$data['categories'] = $this->common_model->getAllwhere(CATEGORY,array('category_status'=>1));
			$userDetails = $this->common_model->getsingle(USERS,array('email'=>$email));
			$data['category_details'] = $this->common_model->getsingle(CATEGORY,array('user_id'=>$userDetails->id));
			$this->frontendtemplates('create_category',$data);
		}else{
			$this->session->set_flashdata('error','
				<div class="alert alert-danger text-center">Oops!.  Plz Login!!!</div>
				');
			redirect(base_url('login'));
		}
	}
	/*********************************************/
	/************** CREATE CATEGORY **************/
	/*********************************************/
	public function social_createcategory($email){
		$usermail = base64_decode($email);
		$data['email'] = $usermail;
		$data['categories'] = $this->common_model->getAllwhere(CATEGORY,array('category_status'=>1));
		$userDetails = $this->common_model->getsingle(USERS,array('email'=>$usermail));
		$data['category_details'] = $this->common_model->getsingle(CATEGORY,array('user_id'=>$userDetails->id));
		$this->frontendtemplates('create_category',$data);
	}
/**
* Function Name: categoryAdd
* Description:   To Add New Category
*/
public function categoryAdd(){
// pr($_POST);
	$data = $this->input->post();
	$email = $data['user_email'];
	$category_name = $data['categoryName'];
	$user_data = $this->common_model->getsingle(USERS,array('email'=>$email));
	$category_data = $this->common_model->getsingle(CATEGORY,array('name'=>$category_name));
	if(empty($category_data)){
		$dataArr = array();
		$dataArr['user_id']  			= $user_data->id;
		$dataArr['name']  			= extract_value($data,'categoryName','');
// $dataArr['que_1']  			= extract_value($data,'que_1','');
// $dataArr['que_2']  			= extract_value($data,'que_2','');
// $dataArr['que_3']  			= extract_value($data,'que_3','');
// $dataArr['que_4']  			= extract_value($data,'que_4','');
// $dataArr['que_5']  			= extract_value($data,'que_5','');
		$dataArr['category_status']  	= 0;
		$slugArr = explode(" ",extract_value($data,'categoryName',''));
	    $slug = isset($slugArr[0])?$slugArr[0]:'';
	    $dataArr['slug'] = $slug;
		$dataArr['created_date'] 		= date('Y-m-d H:i:s');
		$addCat = $this->common_model->insertData(CATEGORY,$dataArr);
		$cate['user_category'] = $addCat;
		$cate['user_role'] = $this->input->post('userRoles');
		$this->common_model->updateFields(USERS,$cate,array('id'=>$user_data->id));
		if($this->input->post('que_')){
			$employeeQ = $this->input->post('que_');
			if($this->input->post('userRoles') == 'Employer'){
				$ques = array();  
				foreach($employeeQ as $row){
					$que['category_id'] = $addCat;
					$que['question'] = '';
					$que['user_type'] = 'Employee';
					$ques[] = $que;
				}
				$this->db->insert_batch(CATEGORY_QUESTIONS, $ques);

				$ques = array();
				foreach($employeeQ as $row){
					$que['category_id'] = $addCat;
					$que['question'] = $row;
					$que['user_type'] = 'Employer';
					$ques[] = $que;
				}
				$this->db->insert_batch(CATEGORY_QUESTIONS, $ques);

				$que['user_type'] = 'Employer';
				redirect('businessprofile');
			}else{
				$ques = array();
				foreach($employeeQ as $row){
					$que['category_id'] = $addCat;
					$que['question'] = $row;
					$que['user_type'] = 'Employee';
					$ques[] = $que;
				}
				$this->db->insert_batch(CATEGORY_QUESTIONS, $ques);

				$ques = array();
				foreach($employeeQ as $row){
					$que['category_id'] = $addCat;
					$que['question'] = '';
					$que['user_type'] = 'Employer';
					$ques[] = $que;
				}
				$this->db->insert_batch(CATEGORY_QUESTIONS, $ques);
				redirect('profile');
			}

		}
		if($addCat){
			$this->session->set_flashdata('updatemsg','
				<div class="alert alert-danger text-center">Oops!.  Plz Set your Role!!!</div>
				');
			$this->create_category($email);
		}
	}else{
		$this->session->set_flashdata('updatemsg','
			<div class="alert alert-danger text-center">Category already added please try other!!!</div>
			');
		$this->create_category($email);
	}
}
/*********************************************/
/************** INSERT USERDATA **************/
/*********************************************/
public function insert_userdata(){
	$user_role=$this->input->post('optradio');
	$user_category = $this->input->post('user_category');
	$user_email=$this->input->post('user_email');
	$userdata['user_role'] = $user_role;
	if(isset($user_category) && !empty($user_category)){
		$userdata['user_category'] = $user_category;
	}
	$condition=array('email'=>$user_email); 	
	$update =$this->common_model->updateFields('tb_users',$userdata,$condition);
	if($update){        
		$condition=array('email'=>$user_email); 			     					                                             
		$user_data = get_where('tb_users',$condition,'row');
		$sess_data = array('id' =>$user_data->id,'userrole' => $user_data->user_role);
		$this->session->set_userdata($sess_data);
		if($user_data->user_role == 'Performer'){
			$this->session->set_userdata('user_login_type','performer');
			redirect('profile');
		}
		else{
			$this->session->set_userdata('user_login_type','employer');
			redirect('businessprofile');
		}
	}            
}
/*********************************************/
/************** FORGOT PASSWORD **************/
/*********************************************/
public function ForgotPassword($id)
{
	$data['user_id'] = $id;
	$this->frontendtemplates('forgetpassword',$data);
}
public function ForgotPasswordProcess(){
	$email = $this->input->post('email');      
	$findemail = $this->User_model->check_email($email);  
	if(!empty($findemail)){
		$user_email = $findemail->email;
		$user_firstname = $findemail->firstname;
		$passwordrandomnumber  = rand(999999999,9999999999);
		$userdata = array(
			'passwordrandom_number' =>  $passwordrandomnumber					
		); 
		$condition=array('email'=>$user_email);                                           				    
		$update = update_data('tb_users',$userdata,$condition);
		if($update)
		{ 
$from = "noreply@workadvisor.co";    //senders email address
$subject = 'Reset your Password';  //email subject
$message = '';
$message .= 'Please click on the below activation link to Reset Your Password<br><br>';
$message .= '<a style="font-weight: bold;letter-spacing: normal;line-height: 100%;text-align: center;text-decoration: none;
color: #ffffff;background: #f26d35;line-height: 3;padding:15px;" href='. base_url().'User/confirmPasswordLink/'. $passwordrandomnumber .'>Reset Your Password</a>';
//config email settings
$config['protocol'] = 'ssmtp';
$config['smtp_host'] = 'ssl://ssmtp.gmail.com';
$config['mailtype'] = 'html';
$config['newline'] = '\r\n';
$config['charset'] = 'utf-8';
$this->load->library('email', $config);
$this->email->initialize($config);
$mailData = array();
$mailData['message'] = $message;
$mailData['username'] = $user_firstname;
$message = $this->load->view('frontend/mailtemplate',$mailData,true);
$this->email->from($from);
$this->email->to($user_email);
$this->email->subject($subject);
$this->email->message($message);
if($this->email->send()){
	$this->session->set_flashdata('loginmsg','
		<div class="alert alert-success text-center">Plz Check!!! sent to your email!!</div>
		');
	redirect('login'); 
}else{
	$this->session->set_flashdata('loginmsg','
		<div class="alert alert-danger text-center">Failed to send mail, please try again!</div>
		');
	redirect('login'); 
}
} 
}else{
	$this->session->set_flashdata('loginmsg','
		<div class="alert alert-danger text-center">Oops!. Email not found!!!!</div>
		');
	redirect('login');	
}
}
/*********************************************/
/************** CONFIRM PASSWORD **************/
/*********************************************/
public function confirmPasswordLink($randomnumber){
	$condition=array('passwordrandom_number'=>$randomnumber); 			     					                                             
	$user_data = get_where('tb_users',$condition,'row');
	if(!empty($user_data))
	{
		$this->ForgotPassword($user_data->id);
	}
}
/*********************************************/
/******** UPDATE RESET PASSWORD **************/
/*********************************************/
public function UpdateResetPassword(){
	$user_id = $this->input->post('user_id');
	$newpass = $this->input->post('newpassword');
	$cnewpass = $this->input->post('cnewpassword');
	if($newpass == $cnewpass){   
		$userdata = array(
			'password' => generate_password($this->input->post('cnewpassword')),
			'passwordrandom_number' => ' '
		);
		$condition=array('id'=>$user_id); 	
		$update = update_data('tb_users',$userdata,$condition);
		if($update){ 
			$this->session->unset_userdata('id');
			$this->session->sess_destroy();            	
			redirect('login');
		}
	}else{
		$this->session->set_flashdata('loginmsg','
			<div class="alert alert-danger text-center">Password is Not Match Plz Try Again!!!</div>
			');
		redirect('login'); 
	}
}
/****************************************/
public function wallpost2(){
	if($this->checkUserLogin()){
		if(!empty($_FILES['file'])){
			$loggedUserId=get_current_user_id();
			$fileName = $_FILES['file']['name'];
			$dats=explode('.',$fileName);
			$ext=$dats[1];
			$targetDir = FCPATH."uploads/videos/";
			$time = time().'_'.rand(99999,9999999999).'_'.rand(10000,99999);
			$newfilename=$time.'.'."mp4";
			$temp=$time;
			$targetFile = $targetDir.$newfilename;
			if(move_uploaded_file($_FILES['file']['tmp_name'],$targetFile)){
				$dataArr['post_video']=$newfilename;
				$datam=array('lastFileName'=>$newfilename);
				$this->session->set_userdata($datam);
				$loggedUserId=get_current_user_id();
				$user_data = $this->common_model->getsingle(USERS,array('id'=>$loggedUserId));
				if($user_data->user_role == 'Performer'){
					$workingAt=$this->common_model->getAllwhere(REQUESTS,array('sender'=>$loggedUserId,'status'=>1),'id','DESC','all',1);
					if(!empty($workingAt['result'])){
						$compId=$workingAt['result'][0]->receiver;
						$company =$this->common_model->getsingle(USERS,array('id'=>$compId));
						$dataArr['company']=$company->id;
					}else{
						$dataArr['company']=0;
					}
				}

				$dataArr['post_title']=$_POST['post_title'];
				$dataArr['post_content']=$_POST['post_content'];
				$dataArr['user_id']=$loggedUserId;
				$dataArr['post_status']=0;

				exec("ffmpeg -i ".$targetDir.$temp.".mp4"); 
				$dataArr['post_video'] = $temp.".mp4";
				$addpost = $this->common_model->insertData(POSTS,$dataArr); 
//$postData = $this->common_model->getsingle(POSTS,array('id'=>$addpost));

			}else{
				echo $fileName. " Not Getting";
			}
		}else{
			echo "not";
		}
	}else{
		$ret=array('status'=>'Failed','msg'=>'Something Went Wrong, Try Again');
		echo json_encode($ret);	
	}	
}
public function wallpost3(){
	$dataArr=array();
	$filename=$this->session->userdata('lastFileName');
	$post=$this->input->post('post_content');
	$dataArr['post_content']=$post;
	$addpost = $this->common_model->updateFields(POSTS,$dataArr,array('post_video'=>$filename));
	if($addpost){
		$arr=array('results'=>1,'msg'=>'posted successfully');
	}else{
		$arr=array('results'=>0,'msg'=>'Video not ready to upload.');
	}
	$datam=array('lastFileName'=>'');
	$this->session->set_userdata($datam);
	$this->session->unset_userdata($datam);
	echo json_encode($arr);
}
/*******************/
/****************************************/
/****************************************/
public function wallpost(){
	if($this->checkUserLogin()){
		if(isset($_POST['post_content'])){
			$allimg=array();
			if(isset($_POST['post_images'])){
				$images=$_POST['post_images'];
				foreach($images as $img){
					$dats=explode(';',$img);
					$dats1=explode('/',$dats[0]);
					$ext=$dats1[1];
					$image=uploadImageData($img,'posts',$ext,"","","");
					if($image['status']=='Failed'){
					}else{
						$allimg[]=$image['imagename'];
					}
				}
				$dataArr['post_image']=implode(',',$allimg);
			}

			$loggedUserId=get_current_user_id();
			$user_data = $this->common_model->getsingle(USERS,array('id'=>$loggedUserId));
			if($user_data->user_role == 'Performer'){
				$workingAt=$this->common_model->getAllwhere(REQUESTS,array('sender'=>$loggedUserId,'status'=>1),'id','DESC','all',1);
				if(!empty($workingAt['result'])){
					$compId=$workingAt['result'][0]->receiver;
					$company =$this->common_model->getsingle(USERS,array('id'=>$compId));
					$dataArr['company']=$company->id;
				}else{
					$dataArr['company']=0;
				}
			}

			$dataArr['post_title']=$_POST['post_title'];
			$dataArr['post_content']=$_POST['post_content'];
			$dataArr['user_id']=$loggedUserId;
			$dataArr['post_status']=0;

			$addpost = $this->common_model->insertData(POSTS,$dataArr); 
			$postData = $this->common_model->getsingle(POSTS,array('id'=>$addpost));
			if($addpost){
				$postimg="";  
				if(isset($_POST['post_images']) && $_POST['post_images']!=""){   
					$imgsert=$_POST['post_images'];
//$postimgarr=explode(',',$imgsert);
					if(count($imgsert)>1){ 
						$postimg.='
						<div class="row">
						';
						foreach($imgsert as $postim){
							$postimg.='
							<div class ="col-sm-4 col-md-4"><a href="#" class="thumbnail"><img src="'.$postim.'" alt="Post Image"></a></div>
							';
						}
						$postimg.="
						</div>
						";
					}else{
						$postimg='
						<div class="over_viewimg">
						<img src="'.$imgsert[0].'" class="img-fluid">
						<div class="bl-box"><img src="'.base_url().'assets/images/scrl.png"></div>
						</div>
						';
					}
				}  
				$html='
				<div class="main_blog">
				<div class="over_viewimg">
				'.$postimg.'
				</div>
				<div class="contant_overviw esdu" onclick="setID('.$postData->id.');">
				<h1>'. date('d-m-Y H:i A').'</h1>
				<div class="btnns">
				<div class="form-group">
				<a href="#" class="linke"><img src="'.base_url().'assets/images/like.png">
				<i class="fa fa-thumbs-up"></i>
				</a>
				</div>
				<a href="" class="editss" data-toggle="modal" data-target="#myModal2" onclick="editPost('.$postData->id.')"><img src="'.base_url().'assets/images/edit.png"></a>
				<a href="" class="editss" data-toggle="modal" data-target="#modalDelete"><i class="fa fa fa-trash-o"></i></a>
				</div>
				<p>'.$dataArr['post_content'].'</p>
				</div>
				</div>
				';
				$ret=array('status'=>'success','msg'=>$html);  
			}else{
				$ret=array('status'=>'Failed','msg'=>'Something Went Wrong, Try Again');
			}	 
		}else{
			$ret=array('status'=>'Failed','msg'=>'Something Went Wrong, Try Again');
		}
		echo json_encode($ret); 
	}else{
		$ret=array('status'=>'Failed','msg'=>'Something Went Wrong, Try Again');
		echo json_encode($ret);				
	}
}	
/********************-Add friend-********************/
function addfriend(){
	if($_POST['userid']){
		if($this->checkUserLogin()){
			$user_id=$_POST['userid'];	
			$userid=decoding($user_id);
			$sender=get_current_user_id();
			$condition="(`user_one_id` ='$sender' AND `user_two_id` = '$userid') OR (`user_one_id` = '$userid' AND `user_two_id` = '$sender')";
			$checkFriend = $this->common_model->getsingle(FRIENDS,$condition);
			if(!empty($checkFriend)){
				$req_status=$checkFriend->status;
				if($req_status==0){
					if($checkFriend->user_one_id==$sender){
						$ret=array('status'=>0,'msg'=>'Request already Sent');
						echo json_encode($ret);
						exit;
					}else{
						$ret=array('status'=>0,'msg'=>'Request Pending');
						echo json_encode($ret);
						exit;
					} 
				}else{
					$ret=array('status'=>0,'msg'=>'already friend'); 
					echo json_encode($ret);
					exit;
				}
			}else{
				$dataInsert=array('user_one_id'=>$sender,'user_two_id'=>$userid,'status'=>0,'action_user_id'=>$sender,'sent_date'=>date('Y-m-d H:i:s'));
				$ins=$this->common_model->insertData(FRIENDS, $dataInsert);
				$notiF = array();
				$notiF['sender'] = $sender;
				$notiF['receiver'] = $userid;
				$notiF['msg'] = "friend_request_received";
				$this->common_model->insertData('notifications',$notiF);
				if($ins){
					$ret=array('status'=>1,'msg'=>'Request Sent');
					echo json_encode($ret);
					exit;
				}else{
					$ret=array('status'=>0,'msg'=>'Login first');
					echo json_encode($ret);
					exit;
				}
			}	
		}else{
			$ret=array('status'=>0,'msg'=>'Login first');
			echo json_encode($ret);
		}
	}
}
/*************************FRIEND***REQUEST***********/
function requestStatus(){
	if($_POST['userid']){
		if($this->checkUserLogin()){
			$user_id=$_POST['userid'];
			$status=$_POST['status'];
			$userid=decoding($user_id);
			$cuid=get_current_user_id();
			if($status=='Accept'){
				$mstatus=1;
			}else if($status=='Reject'){
				$mstatus=2;
			}else{
				$mstatus=3;
			}
			$updtData=array('status'=>$mstatus,'action_user_id'=>$cuid,'accept_date'=>date('Y-m-d H:i:s'));
			$where=array('user_one_id'=>$userid,'user_two_id'=>$cuid);

			if($mstatus == 1 || $mstatus == 3){
				$updt=$this->common_model->updateFields(FRIENDS, $updtData, $where);
				$notiF = array();
				$notiF['sender'] = $cuid;
				$notiF['receiver'] = $userid;
				$notiF['msg'] = "friend_request_accepted";
				$this->common_model->insertData('notifications',$notiF);
				if($updt){
					$ret=array('status'=>1,'msg'=>'Accepted');
					echo json_encode($ret);
					exit;
				}else{
					$ret=array('status'=>0,'msg'=>'Something Went Wrong');
					echo json_encode($ret); 
					exit;
				}
			}
			else{
				$this->common_model->deleteData(FRIENDS,$where);
				$ret=array('status'=>1,'msg'=>'Accepted');
				echo json_encode($ret);
				exit;
			}


// if($updt){
// 	$ret=array('status'=>1,'msg'=>'Accepted');
// 	echo json_encode($ret);
// 	$this->common_model->deleteData(FRIENDS,$where);
// 	exit;
// }else{
// 	$ret=array('status'=>0,'msg'=>'Something Went Wrong');
// 	echo json_encode($ret); 
// 	exit;
// }	
		}else{
			$ret=array('status'=>0,'msg'=>'Login first');
			echo json_encode($ret);
			exit;
		}
	}
}
/*****************************SEND-JOB-REQUEST****************************/	
function sendjobrequest(){
	if($_POST['userid']){
		if($this->checkUserLogin()){
			$user_id=$_POST['userid'];	
			$userid=decoding($user_id);
			$sender=get_current_user_id();
			$condition="(`sender` ='$sender' AND `receiver` = '$userid') OR (`sender` = '$userid' AND `receiver` = '$sender')";
			$checkRequests = $this->common_model->getsingle(REQUESTS,$condition);
			if(!empty($checkRequests)){
				$req_status=$checkRequests->status;
				if($req_status==0){
					if($checkRequests->sender==$sender){
						$ret=array('status'=>0,'msg'=>'Request already Sent');
						echo json_encode($ret);
						exit;
					}else{
						$ret=array('status'=>0,'msg'=>'Request Pending');
						echo json_encode($ret);
						exit;
					} 
				}else{
					$ret=array('status'=>0,'msg'=>'already friend'); 
					echo json_encode($ret);
					exit;
				}
			}else{
				if($this->input->post('emp')!='false'){
					$dataInsert=array('sender'=>$userid,'receiver'=>$sender,'status'=>0,'action_user_id'=>$sender,'sent_date'=>date('Y-m-d H:i:s'),'accept_status_notify_business_sent'=>1,'job_requested_by'=>$sender);
					$notiF = array();
					$notiF['sender'] = $sender;
					$notiF['receiver'] = $userid;
					$notiF['msg'] = "Job_req_by_employer";
					$this->common_model->insertData('notifications',$notiF);
				}else{
					$dataInsert=array('sender'=>$sender,'receiver'=>$userid,'status'=>0,'action_user_id'=>$sender,'sent_date'=>date('Y-m-d H:i:s'),'job_requested_by'=>$sender,'accept_status_notify'=>1);
					$notiF = array();
					$notiF['sender'] = $sender;
					$notiF['receiver'] = $userid;
					$notiF['msg'] = "Job_req_by_performer";
					$this->common_model->insertData('notifications',$notiF);
				}
				$ins=$this->common_model->insertData(REQUESTS, $dataInsert);
				if($ins){
					$ret=array('status'=>1,'msg'=>'Request Sent');
					echo json_encode($ret);
					exit;
				}else{
					$ret=array('status'=>0,'msg'=>'Login first');
					echo json_encode($ret);
					exit;
				}
			}	
		}else{
			$ret=array('status'=>0,'msg'=>'Login first');
			echo json_encode($ret);
		}
	}
}

function jobrequeststatus(){
// pr($_POST);
	if($_POST['userid']){
		if($this->checkUserLogin()){
			$user_id=$_POST['userid'];
			$status=$_POST['status'];
			$userid=decoding($user_id);
			$cuid=get_current_user_id();
			if($status=='Accept'){
				$mstatus=1;
			}else if($status=='Reject' || $status=='Unfriend' || $status=='Block'){
				$mstatus=2;
			}else{
				$mstatus=3;
			}
			if($this->input->post('per')!='false'){
				$updtData=array('status'=>$mstatus,'action_user_id'=>$cuid,'accept_date'=>date('Y-m-d H:i:s'),'confirmed_business'=>1);
			}else{
				$updtData=array('status'=>$mstatus,'action_user_id'=>$cuid,'accept_date'=>date('Y-m-d H:i:s'),'confirmed'=>1);
			}
			if($this->input->post('per')!='false'){
				$where=array('sender'=>$cuid,'receiver'=>$userid);
				$notiF = array();
				$notiF['sender'] = $cuid;
				$notiF['receiver'] = $userid;
				$notiF['msg'] = "Job_accepted_by_performer";
				$this->common_model->insertData('notifications',$notiF);
			}else{
				$where=array('sender'=>$userid,'receiver'=>$cuid);
				$notiF = array();
				$notiF['sender'] = $cuid;
				$notiF['receiver'] = $userid;
				$notiF['msg'] = "Job_accepted_by_employer";
				$this->common_model->insertData('notifications',$notiF);
			}

			if($mstatus == 1 || $mstatus == 3){
				$updt=$this->common_model->updateFields(REQUESTS, $updtData, $where);
				//lq();
				if($updt){
					$ret=array('status'=>1,'msg'=>'Accepted');
					echo json_encode($ret);
					exit;
				}else{
					$ret=array('status'=>0,'msg'=>'Something Went Wrong');
					echo json_encode($ret); 
					exit;
				}
			}
			else{
				$this->common_model->deleteData(REQUESTS,$where);
				$ret=array('status'=>1,'msg'=>'Accepted');
				echo json_encode($ret);
				exit;
			}

		}else{
			$ret=array('status'=>0,'msg'=>'Login first');
			echo json_encode($ret);
			exit;
		}
	}
}
/****************************Send-Message********************************/	
public function sendmessage(){
	if($_POST['userid']){
		if($this->checkUserLogin()){
			$sender=get_current_user_id();
			$receiver=decoding($_POST['userid']);
			$message=trim($_POST['message']);
			$user_data = $this->common_model->getsingle(USERS,array('id'=>$sender));
			$dataInsert=array('sender'=>$sender,'receiver'=>$receiver,'status'=>0,'message'=>$message,'message_date'=>date('Y-m-d H:i:s'),'notify'=>0);
			$ins=$this->common_model->insertData('messages',$dataInsert);
			$notiF = array();
			$notiF['sender'] = $sender;
			$notiF['receiver'] = $receiver;
			$notiF['msg'] = "MSG";
			$this->common_model->insertData('notifications',$notiF);
			if($ins){
				$uimg=(!empty($user_data->profile)) ? $user_data->profile:DEFAULT_IMAGE;
				$html='
				<div class="fil_ds wid_ri">
				<div class="pro_img"><img src="'.$uimg.'" alt="'.strtoupper(substr($user_data->firstname,0,1)).'" style="width: 40px;border-radius: 20px;"></div>
				<div class="msg_bx bg_chng">'.$message.'</div>
				<span class="date">'.date('M-d-Y h:i A',strtotime(date('Y-m-d H:i:s'))).'</span>
				</div>
				';
				$ret=array('status'=>'success','msg'=>$html);
				echo json_encode($ret);
				exit;
			}else{
				$ret=array('status'=>'Failed','msg'=>'Something Went Wrong');
				echo json_encode($ret); 
				exit;
			}
		}else{
			$message_link = base_url().'viewdetails/profile/'.($_POST['userid']);
			$this->session->set_userdata('message_link',$message_link."?msg=1");
			$ret=array('status'=>'Failed','msg'=>'Login first');
			echo json_encode($ret);
			exit;	
		}
	}else{
		$ret=array('status'=>'Failed','msg'=>'Not Allowed');
		echo json_encode($ret);
		exit;
	}
}
/**************************************************************/
public function message(){
	if($this->checkUserLogin()){
		$user_id=get_current_user_id();
		$customQuery="SELECT * FROM (SELECT * FROM `".MESSAGES."` ORDER BY `message_date` DESC) `temp` INNER JOIN `".USERS."` ON `".USERS."`.`id`=`temp`.`sender` OR `".USERS."`.`id`=`temp`.`receiver` WHERE (`temp`.`sender` = '".$user_id."' OR `temp`.`receiver` = '".$user_id."') AND `tb_users`.`id` != '".$user_id."' GROUP BY `tb_users`.`id` ORDER BY temp.id DESC";
		$data['allFriends']=$this->common_model->custom_query($customQuery);
		$singleUser=$this->common_model->getsingle(MESSAGES,"(receiver='$user_id' OR sender='$user_id') ORDER BY id DESC");
		$data['conversation']=array('result'=>array());
		if(!empty($singleUser)){
			if($singleUser->sender!=$user_id){
				$id=$singleUser->sender;
			}else{
				$id=$singleUser->receiver;	
			}
			$where = array('sender'=>$id,'receiver'=>$user_id);
			$updtData = array('accept_status_notify'=>2);
			$this->common_model->updateFields(MESSAGES, $updtData, $where);
			$con="(sender='$user_id' AND receiver='$id') OR (sender='$id' AND receiver='$user_id')";
			$data['conversation'] = $this->common_model->getAllwhere(MESSAGES,$con,'id','DESC','all',5,0,$group_by='',$and_where = '');
			$data['user_data'] = $this->common_model->getsingle(USERS,array('id'=>$id));
			$data['personal_data'] = $this->common_model->getsingle(USERS,array('id'=>$user_id));
		}else{
		}
		$this->pageview('message',$data,$data,array()); 
	}else{
		redirect(base_url('login'));	
	}
}
/**********************************************/
/******************#HISTORY#*******************/
/**********************************************/
public function history(){
	if($this->checkUserLogin()){
		$user_id=get_current_user_id();
//rating by company
		$condition=array('id'=>$user_id); 			     					
//code for showing top user data 
		$workingAt=$this->common_model->getAllwhere(REQUESTS,array('sender'=>$user_id,'status'=>1),'id','DESC','all',1);

		if(!empty($workingAt['result'])){
			$compId=$workingAt['result'][0]->receiver;
			$data['workingAt'] = get_where('tb_users',array('id'=>$compId),'row');
		}else{
			$data['workingAt']=array();
		}

		$data['ratingsData'] = userOverallRatings($user_id);
		$data['ratingDetails'] = $this->common_model->getAllwhere(RATINGS,array('rated_to_user'=>$user_id));
//performance calculation
		$percentarray = array();
		if(!empty($data['ratingDetails']['result'])){
			$percent_cnt1 = 0;
			$percent_cnt2 = 0;
			$percent_cnt3 = 0;
			$percent_cnt4 = 0;
			$percent_cnt5 = 0;

			foreach($data['ratingDetails']['result'] as $row){
				$average = 0;
				$total = $row->ques_1+$row->ques_2+$row->ques_3+$row->ques_4+$row->ques_5;
				if($total>0){
					$average = $total/5;
					$average = floor($average);
					if($average > 0){
						if($average == 1)
							$percent_cnt1++;
						if($average == 2)
							$percent_cnt2++;
						if($average == 3)
							$percent_cnt3++;
						if($average == 4)
							$percent_cnt4++;
						if($average == 5)
							$percent_cnt5++;
					}
				}
			}
			if($percent_cnt1>0){
				$percentarray[1] = ($percent_cnt1/$data['ratingDetails']['total_count'])*100;
			}if($percent_cnt2>0){
				$percentarray[2] = ($percent_cnt2/$data['ratingDetails']['total_count'])*100;
			}if($percent_cnt3>0){
				$percentarray[3] = ($percent_cnt3/$data['ratingDetails']['total_count'])*100;
			}if($percent_cnt4>0){
				$percentarray[4] = ($percent_cnt4/$data['ratingDetails']['total_count'])*100;
			}if($percent_cnt5>0){
				$percentarray[5] = ($percent_cnt5/$data['ratingDetails']['total_count'])*100;
			}
		}
		$data['percentarray'] = $percentarray;                                             
		$data['user_data'] = get_where('tb_users',$condition,'row');
		$category=$data['user_data']->user_category;
		$data['category_questions'] = $this->common_model->getsingle(CATEGORY,array('id'=>$category));
		$data['category_questions_performer'] = $this->common_model->get_two_table_data('category_questions.*',CATEGORY_QUESTIONS,CATEGORY,'category_questions.category_id = category.id',array('user_type'=>'Employee','category.id'=>$category),$groupby="");

		$data['category_questions_employer'] = $this->common_model->get_two_table_data('category_questions.*',CATEGORY_QUESTIONS,CATEGORY,'category_questions.category_id = category.id',array('user_type'=>'Employer','category.id'=>$category),$groupby="");
		$userTypeData =  $this->common_model->getsingle(USERS,array('id'=>get_current_user_id()));
		$data['user_role'] = $userTypeData->user_role;
		$inform=array('ratings.company_id','tb_users.business_name');
		$compRatdata=$this->common_model->get_two_table_data($inform,RATINGS,USERS,'ratings.company_id=tb_users.id',array('ratings.rated_to_user'=>$user_id),"ratings.company_id");
		/************************/
		$indivReview=array();
		foreach($compRatdata as $com){
			$companyId=$com['company_id'];
			$business_name=$com['business_name'];
			$ratingDetails = $this->common_model->getAllwhere(RATINGS,array('rated_to_user'=>$user_id,'company_id'=>$companyId));

			if(!empty($ratingDetails['result'])){
				foreach($ratingDetails['result'] as $row){
					$retedby=$row->rated_by_user;	
					$cusers = $this->common_model->getsingle(USERS,array('id'=>$retedby));
					if(!empty($cusers)){
						if($cusers->user_role != 'Employer'){
							$givername=isset($cusers->firstname) ? $cusers->firstname : "" ;
							$givername.=isset($cusers->lastname) ? " ".$cusers->lastname : "" ;
						}else{
							$givername=isset($cusers->business_name) ? ucfirst($cusers->business_name) : "" ;
						}
						$profile=isset($cusers->profile) ? $cusers->profile : "" ;
						$city=isset($cusers->city) ? $cusers->city : "" ;
						$state=isset($cusers->state) ? $cusers->state : "" ;
						$country=isset($cusers->country) ? $cusers->country : "";

						$history = array();
						$ques_[0] = starRating($row->ques_1);
						$ques_[1] = starRating($row->ques_2);
						$ques_[2] = starRating($row->ques_3);
						$ques_[3] = starRating($row->ques_4);
						$ques_[4] = starRating($row->ques_5);


						$ques_['message']=$row->message;
						$ques_['company_id']=$companyId;
						$ques_['retedbyid']=$row->rated_by_user;
						$ques_['givername']=$givername;
						$ques_['profile']=$profile;
						$ques_['user_role'] = $cusers->user_role;
						$ques_['address']=$city.','.$state.','.$country;

						if($cusers->user_role != 'Employer'){
							$ques_['star_ratings'] = userOverallRatings($cusers->id);
						}

						$indivReview[$business_name][]= $ques_;
					}else{
						$ques_['message']=isset($row->message)?$row->message:'';
						$ques_['company_id']=isset($companyId)?$companyId:'';
						$ques_['retedbyid']=isset($row->rated_by_user)?$row->rated_by_user:'';
						$ques_['givername']='Unknown';
						$ques_['user_role'] = '';
						$ques_['profile']='';
						$ques_['address']='';
						$ques_['star_ratings'] = starRating(0);
						$indivReview[$business_name][]= $ques_;
					}
				}


			} else{
				for($i=0;$i<=5;$i++){
					$ques_[$i] = starRating(0);
				}
				$indivReview[$business_name]['historyRating'][]= $ques_;


			}
		}
		$data['MyhistoryRating'] = $indivReview;
		$data['user_id'] = $user_id;
		$data['userType'] = 'self';
		$this->pageview('history',$data,$data,array()); 
	}else{
		redirect(base_url('login'));	
	}
}

public function viewhistory($id,$star_id = false){
	if($id!=""){
		$user_id=decoding($id);
		$data['userType'] = 'other';
		if($user_id == get_current_user_id()){
			$data['userType'] = 'self';
		}
//rating by company_id
		$condition=array('id'=>$user_id); 			     					
//code for showing top user data 
		$workingAt=$this->common_model->getAllwhere(REQUESTS,array('sender'=>$user_id,'status'=>1),'id','DESC','all',1);

		if(!empty($workingAt['result'])){
			$compId=$workingAt['result'][0]->receiver;
			$data['workingAt'] = get_where('tb_users',array('id'=>$compId),'row');
		}else{
			$data['workingAt']=array();
		}

		$data['ratingsData'] = userOverallRatings($user_id);
		$data['ratingDetails'] = $this->common_model->getAllwhere(RATINGS,array('rated_to_user'=>$user_id));
//performance calculation
		$percentarray = array();
		if(!empty($data['ratingDetails']['result'])){
			$percent_cnt1 = 0;
			$percent_cnt2 = 0;
			$percent_cnt3 = 0;
			$percent_cnt4 = 0;
			$percent_cnt5 = 0;

			foreach($data['ratingDetails']['result'] as $row){
				$average = 0;
				$total = $row->ques_1+$row->ques_2+$row->ques_3+$row->ques_4+$row->ques_5;
				if($total>0){
					$average = $total/5;
					$average = floor($average);
					if($average > 0){
						if($average == 1)
							$percent_cnt1++;
						if($average == 2)
							$percent_cnt2++;
						if($average == 3)
							$percent_cnt3++;
						if($average == 4)
							$percent_cnt4++;
						if($average == 5)
							$percent_cnt5++;
					}
				}
			}
			if($percent_cnt1>0){
				$percentarray[1] = ($percent_cnt1/$data['ratingDetails']['total_count'])*100;
			}if($percent_cnt2>0){
				$percentarray[2] = ($percent_cnt2/$data['ratingDetails']['total_count'])*100;
			}if($percent_cnt3>0){
				$percentarray[3] = ($percent_cnt3/$data['ratingDetails']['total_count'])*100;
			}if($percent_cnt4>0){
				$percentarray[4] = ($percent_cnt4/$data['ratingDetails']['total_count'])*100;
			}if($percent_cnt5>0){
				$percentarray[5] = ($percent_cnt5/$data['ratingDetails']['total_count'])*100;
			}
		}
		$data['percentarray'] = $percentarray;                                              
		$data['user_data'] = get_where('tb_users',$condition,'row');
		$category=isset($data['user_data']->user_category)?$data['user_data']->user_category:'';
		$userTypeData =  $this->common_model->getsingle(USERS,array('id'=>get_current_user_id()));
		if($category!="" && !empty($userTypeData)){
			if($userTypeData->user_role == 'Performer'){
				$userType = 'Employee';
			}else if($userTypeData->user_role == 'Employer'){
				$userType = 'Employer';
			}else{
				$userType="";
			}
			$data['category_questions'] = $this->common_model->get_two_table_data('category_questions.*',CATEGORY_QUESTIONS,CATEGORY,'category_questions.category_id = category.id',array('user_type'=>$userType,'category.id'=>$category),$groupby="");

			$data['category_questions_performer'] = $this->common_model->get_two_table_data('category_questions.*',CATEGORY_QUESTIONS,CATEGORY,'category_questions.category_id = category.id',array('user_type'=>'Employee','category.id'=>$category),$groupby="");

			$data['category_questions_employer'] = $this->common_model->get_two_table_data('category_questions.*',CATEGORY_QUESTIONS,CATEGORY,'category_questions.category_id = category.id',array('user_type'=>'Employer','category.id'=>$category),$groupby="");
		}

		if(!empty($userTypeData)){

			$data['user_role']=$userTypeData->user_role;
		}else{
			$data['user_role']="";
		}

		if($star_id)
		{
			$ratingDetails = $this->common_model->getAllwhere(RATINGS,array('rated_to_user'=>$user_id));
			if(!empty($ratingDetails['result'])){
				$userIds = array();
				foreach($ratingDetails['result'] as $row){
					$average = 0;
					$total = $row->ques_1+$row->ques_2+$row->ques_3+$row->ques_4+$row->ques_5;
					if($total>0){
						$average = $total/5;
						$average = floor($average);
						if($average > 0){
							if($average == $star_id){
								$userIds[] = $row->rated_by_user;
							}
						}
					}
				}
				$users = implode(',', $userIds);
				$where = " ratings.rated_to_user=$user_id and ratings.rated_by_user IN(".$users.")";

				$companyId='';
				$business_name='';
				$indivReview=array();
				$ratingDetails = $this->common_model->getAllwhere(RATINGS,$where);
				if(!empty($ratingDetails['result'])){
					foreach($ratingDetails['result'] as $row){
						$retedby=$row->rated_by_user;	
						$cusers = $this->common_model->getsingle(USERS,array('id'=>$retedby));
						if(!empty($cusers)){
							if($cusers->user_role != 'Employer'){
								$givername=isset($cusers->firstname) ? $cusers->firstname : "" ;
								$givername.=isset($cusers->lastname) ? " ".$cusers->lastname : "" ;
							}else{
								$givername=isset($cusers->business_name) ? ucfirst($cusers->business_name) : "" ;
							}
							$profile=isset($cusers->profile) ? $cusers->profile : "" ;
							$city=isset($cusers->city) ? $cusers->city : "" ;
							$state=isset($cusers->state) ? $cusers->state : "" ;
							$country=isset($cusers->country) ? $cusers->country : "";

							$history = array();
							$ques_[0] = starRating($row->ques_1);
							$ques_[1] = starRating($row->ques_2);
							$ques_[2] = starRating($row->ques_3);
							$ques_[3] = starRating($row->ques_4);
							$ques_[4] = starRating($row->ques_5);


							$ques_['message']=$row->message;
							$ques_['company_id']=$companyId;
							$ques_['retedbyid']=$row->rated_by_user;
							$ques_['givername']=$givername;
							$ques_['profile']=$profile;
							$ques_['user_role'] = $cusers->user_role;
							$ques_['address']=$city.','.$state.','.$country;
							if($cusers->user_role != 'Employer'){
								$ques_['star_ratings'] = userOverallRatings($cusers->id);
							}

							$indivReview[$business_name][]= $ques_;
						}
						else{
							$ques_['message']=isset($row->message)?$row->message:'';
							$ques_['company_id']=isset($companyId)?$companyId:'';
							$ques_['retedbyid']=isset($row->rated_by_user)?$row->rated_by_user:'';
							$ques_['givername']='Unknown';
							$ques_['user_role'] = '';
							$ques_['profile']='';
							$ques_['address']='';
							$ques_['star_ratings'] = starRating(0);
							$indivReview[$business_name][]= $ques_;
						}
					}


				} else{
					for($i=0;$i<=5;$i++){
						$ques_[$i] = starRating(0);
					}
					$indivReview[$business_name]['historyRating'][]= $ques_;


				}
			}

		}else{
			$inform=array('ratings.company_id','tb_users.business_name');
			$compRatdata=$this->common_model->get_two_table_data($inform,RATINGS,USERS,'ratings.company_id=tb_users.id',array('ratings.rated_to_user'=>$user_id),"ratings.company_id");

			/************************/
			$indivReview=array();
			foreach($compRatdata as $com){
				$companyId=$com['company_id'];
				$business_name=$com['business_name'];
				$ratingDetails = $this->common_model->getAllwhere(RATINGS,array('rated_to_user'=>$user_id,'company_id'=>$companyId));
				$reviewcounter=$ratingDetails['total_count'];
				$ratingAverages=0;
				$ques1 = 0;
				$ques2 = 0;
				$ques3 = 0;
				$ques4 = 0;
				$ques5 = 0;
				$ques = array();
				if(!empty($ratingDetails['result'])){
					foreach($ratingDetails['result'] as $row){
						$retedby=$row->rated_by_user;	
						$cusers = $this->common_model->getsingle(USERS,array('id'=>$retedby));
						if(!empty($cusers)){
							if($cusers->user_role !='Employer'){
								$givername=isset($cusers->firstname) ? $cusers->firstname : "" ;
								$givername.=isset($cusers->lastname) ? " ".$cusers->lastname : "" ;
							}else{
								$givername=isset($cusers->business_name) ? ucfirst($cusers->business_name) : "" ;
							}

							$profile=isset($cusers->profile) ? $cusers->profile : "" ;
							$city=isset($cusers->city) ? $cusers->city : "" ;
							$state=isset($cusers->state) ? $cusers->state : "" ;
							$country=isset($cusers->country) ? $cusers->country : "";

							$history = array();
							$ques_[0] = starRating($row->ques_1);
							$ques_[1] = starRating($row->ques_2);
							$ques_[2] = starRating($row->ques_3);
							$ques_[3] = starRating($row->ques_4);
							$ques_[4] = starRating($row->ques_5);


							$ques_['message']=$row->message;
							$ques_['company_id']=$companyId;
							$ques_['retedbyid']=$row->rated_by_user;
							$ques_['givername']=$givername;
							$ques_['user_role'] = $cusers->user_role;
							$ques_['profile']=$profile;
							$ques_['address']=$city.','.$state.','.$country;
							if($cusers->user_role != 'Employer'){
								$ques_['star_ratings'] = userOverallRatings($cusers->id);
							}

							$indivReview[$business_name][]= $ques_;
						}
						else{
							$ques_['message']=isset($row->message)?$row->message:'';
							$ques_['company_id']=isset($companyId)?$companyId:'';
							$ques_['retedbyid']=isset($row->rated_by_user)?$row->rated_by_user:'';
							$ques_['givername']='Unknown';
							$ques_['user_role'] = '';
							$ques_['profile']='';
							$ques_['address']='';
							$ques_['star_ratings'] = starRating(0);
							$indivReview[$business_name][]= $ques_;
						}
					}

				} else{
					for($i=0;$i<=5;$i++){
						$ques_[$i] = starRating(0);
					}
					$indivReview[$business_name]['historyRating'][]= $ques_;

				}
			}

		}
//code for showing write review data
		if(!empty($data['ratingDetails']['result'])){
			$questionRating = array();
			foreach($data['ratingDetails']['result'] as $row){
				if($row->rated_by_user == get_current_user_id()){
					$questionRating[] = $row->ques_1;
					$questionRating[] = $row->ques_2;
					$questionRating[] = $row->ques_3;
					$questionRating[] = $row->ques_4;
					$questionRating[] = $row->ques_5;
					$questionRating[] = $row->message;
				}
			}
			$data['questionRating'] = $questionRating;
		}
		$data['user_id'] = $user_id;
		$data['MyhistoryRating'] = $indivReview;
		$this->pageview('history',$data,$data,array()); 
	}else{
		redirect(base_url('login'));	
	}
}
/**********************************************/
/******************#HISTORY-View-Individual#*******************/
/**********************************************/
public function indivisualhistory($id,$compid,$star_id = false){
	if($id!=""){
		$user_id=decoding($id);
		$data['userType'] = 'other';
		if($user_id == get_current_user_id()){
			$data['userType'] = 'self';
		}
		$company_id=decoding($compid);
//rating by company
		$condition=array('id'=>$user_id); 			     					     
//code for showing top user data 
		$workingAt=$this->common_model->getAllwhere(REQUESTS,array('sender'=>$user_id,'status'=>1),'id','DESC','all',1);

		if(!empty($workingAt['result'])){
			$compId=$workingAt['result'][0]->receiver;
			$data['workingAt'] = get_where('tb_users',array('id'=>$compId),'row');
		}else{
			$data['workingAt']=array();
		}

		$data['ratingsData'] = userOverallRatings($user_id);
		$data['ratingDetails'] = $this->common_model->getAllwhere(RATINGS,array('rated_to_user'=>$user_id));
//performance calculation
		$percentarray = array();
		if(!empty($data['ratingDetails']['result'])){
			$questionRating = array();
			foreach($data['ratingDetails']['result'] as $row){
				if($row->rated_by_user == get_current_user_id()){
					$questionRating[] = $row->ques_1;
					$questionRating[] = $row->ques_2;
					$questionRating[] = $row->ques_3;
					$questionRating[] = $row->ques_4;
					$questionRating[] = $row->ques_5;
					$questionRating[] = $row->message;
				}
			}
			$data['questionRating'] = $questionRating;
			$percent_cnt1 = 0;
			$percent_cnt2 = 0;
			$percent_cnt3 = 0;
			$percent_cnt4 = 0;
			$percent_cnt5 = 0;

			foreach($data['ratingDetails']['result'] as $row){
				$average = 0;
				$total = $row->ques_1+$row->ques_2+$row->ques_3+$row->ques_4+$row->ques_5;
				if($total>0){
					$average = $total/5;
					$average = floor($average);
					if($average > 0){
						if($average == 1)
							$percent_cnt1++;
						if($average == 2)
							$percent_cnt2++;
						if($average == 3)
							$percent_cnt3++;
						if($average == 4)
							$percent_cnt4++;
						if($average == 5)
							$percent_cnt5++;
					}
				}
			}
			if($percent_cnt1>0){
				$percentarray[1] = ($percent_cnt1/$data['ratingDetails']['total_count'])*100;
			}if($percent_cnt2>0){
				$percentarray[2] = ($percent_cnt2/$data['ratingDetails']['total_count'])*100;
			}if($percent_cnt3>0){
				$percentarray[3] = ($percent_cnt3/$data['ratingDetails']['total_count'])*100;
			}if($percent_cnt4>0){
				$percentarray[4] = ($percent_cnt4/$data['ratingDetails']['total_count'])*100;
			}if($percent_cnt5>0){
				$percentarray[5] = ($percent_cnt5/$data['ratingDetails']['total_count'])*100;
			}
		}
		$data['percentarray'] = $percentarray;

		$data['user_data'] = get_where('tb_users',$condition,'row');
		$category=$data['user_data']->user_category;
		$data['category'] = $this->common_model->getsingle(CATEGORY,array('id'=>$category));
		$userTypeData =  $this->common_model->getsingle(USERS,array('id'=>get_current_user_id()));
		if($category!=""){
			if($userTypeData->user_role == 'Performer'){
				$userType = 'Employee';
			}else{
				$userType = 'Employer';
			}
			$data['category_questions'] = $this->common_model->get_two_table_data('category_questions.*',CATEGORY_QUESTIONS,CATEGORY,'category_questions.category_id = category.id',array('user_type'=>$userType,'category.id'=>$category),$groupby="");

			$data['category_questions_performer'] = $this->common_model->get_two_table_data('category_questions.*',CATEGORY_QUESTIONS,CATEGORY,'category_questions.category_id = category.id',array('user_type'=>'Employee','category.id'=>$category),$groupby="");

			$data['category_questions_employer'] = $this->common_model->get_two_table_data('category_questions.*',CATEGORY_QUESTIONS,CATEGORY,'category_questions.category_id = category.id',array('user_type'=>'Employer','category.id'=>$category),$groupby="");
		}

		$inform=array('ratings.company_id','tb_users.business_name');
		$compRatdata=$this->common_model->get_two_table_data($inform,RATINGS,USERS,'ratings.company_id=tb_users.id',array('ratings.rated_to_user'=>$user_id,'company_id'=>$company_id),"ratings.company_id");
		/************************/
		$indivReview=array();
		foreach($compRatdata as $com){
			$companyId=$com['company_id'];
			$business_name=$com['business_name'];
			$ratingDetails = $this->common_model->getAllwhere(RATINGS,array('rated_to_user'=>$user_id,'company_id'=>$companyId));
			if(!empty($ratingDetails['result'])){
				foreach($ratingDetails['result'] as $row){
					$retedby=$row->rated_by_user;	
					$cusers = $this->common_model->getsingle(USERS,array('id'=>$retedby));
					if(!empty($cusers)){
						if($cusers->user_role != 'Employer'){
							$givername=isset($cusers->firstname) ? $cusers->firstname : "" ;
							$givername.=isset($cusers->lastname) ? " ".$cusers->lastname : "" ;
						}else{
							$givername=isset($cusers->business_name) ? ucfirst($cusers->business_name) : "" ;
						}
						$profile=isset($cusers->profile) ? $cusers->profile : "" ;
						$city=isset($cusers->city) ? $cusers->city : "" ;
						$state=isset($cusers->state) ? $cusers->state : "" ;
						$country=isset($cusers->country) ? $cusers->country : "";

						$history = array();
						$ques_[0] = starRating($row->ques_1);
						$ques_[1] = starRating($row->ques_2);
						$ques_[2] = starRating($row->ques_3);
						$ques_[3] = starRating($row->ques_4);
						$ques_[4] = starRating($row->ques_5);


						$ques_['message']=$row->message;
						$ques_['company_id']=$companyId;
						$ques_['retedbyid']=$row->rated_by_user;
						$ques_['givername']=$givername;
						$ques_['user_role'] = $cusers->user_role;
						$ques_['profile']=$profile;
						$ques_['address']=$city.','.$state.','.$country;
						if($cusers->user_role != 'Employer'){
							$ques_['star_ratings'] = userOverallRatings($cusers->id);
						}
						$indivReview[$business_name][]= $ques_;
					}else{
						$ques_['message']=isset($row->message)?$row->message:'';
						$ques_['company_id']=isset($companyId)?$companyId:'';
						$ques_['retedbyid']=isset($row->rated_by_user)?$row->rated_by_user:'';
						$ques_['givername']='Unknown';
						$ques_['user_role'] = '';
						$ques_['profile']='';
						$ques_['address']='';
						$ques_['star_ratings'] = starRating(0);
						$indivReview[$business_name][]= $ques_;
					}
				}

			} else{
				for($i=0;$i<=5;$i++){
					$ques_[$i] = starRating(0);
				}
				$indivReview[$business_name]['historyRating'][]= $ques_;

			}
			$data['user_role'] = $userTypeData->user_role;
		}
		$data['MyhistoryRating'] = $indivReview;

		$this->pageview('indivisual_history',$data,$data,array()); 
	}else{
		redirect(base_url('login'));	
	}
}
/**********************************************/
/************#Indivisual Message#**************/
/**********************************************/
public function indivisualMessage(){
	if($this->checkUserLogin()){
		$id=decoding($_POST['userid']);
		$user_id=get_current_user_id();
		$where = array('sender'=>$id,'receiver'=>$user_id);
		$updtData = array('accept_status_notify'=>2);
		$this->common_model->updateFields(MESSAGES, $updtData, $where);
		$con="(sender='$user_id' AND receiver='$id') OR (sender='$id' AND receiver='$user_id')";
		$data['conversation'] = $this->common_model->getAllwhere(MESSAGES,$con,'id','DESC','all',5,0,$group_by='',$and_where = '');
		$data['user_data'] = $this->common_model->getsingle(USERS,array('id'=>$id));
		$data['personal_data'] = $this->common_model->getsingle(USERS,array('id'=>$user_id));
		$htm=$this->load->view('frontend/chatview',$data,true); 
		$ret=array('result'=>1,'msg'=>$htm,'userid'=>$id);
		echo json_encode($ret);
		exit;
	}else{
		$ret=array('result'=>0,'msg'=>'Not Allowed');
		echo json_encode($ret);
		exit;	
	}
}
public function indivisualMessageOld(){
	if($this->checkUserLogin()){
		$id=$_POST['userid'];
		$user_id=get_current_user_id();
		$top_id=$_POST['top_id'];
		
		$where = array('sender'=>$id,'receiver'=>$user_id);
		$updtData = array('accept_status_notify'=>2);
		$this->common_model->updateFields(MESSAGES, $updtData, $where);
		$con="((sender='$user_id' AND receiver='$id') OR (sender='$id' AND receiver='$user_id'))";
		$data['conversation'] = $this->common_model->getAllwhere(MESSAGES,$con,'id','DESC','all',5,0,$group_by='',"id < '$top_id' ");
		$data['user_data'] = $this->common_model->getsingle(USERS,array('id'=>$id));
		$data['personal_data'] = $this->common_model->getsingle(USERS,array('id'=>$user_id));
		$htm=$this->load->view('frontend/chatview',$data,true); 
		$ret=array('result'=>1,'msg'=>$htm,'userid'=>$id);
		echo json_encode($ret);
		exit;
	}else{
		$ret=array('result'=>0,'msg'=>'Not Allowed');
		echo json_encode($ret);
		exit;	
	}
}
/***********************Check-Notification*********************/
public function checknotification(){
	if($this->checkUserLogin()){
		$cuid=get_current_user_id();	
		$info=array('tb_users.id as usrid','tb_users.firstname','tb_users.lastname','tb_users.email','tb_users.profile','tb_users.city','tb_users.state','tb_users.country','friends.id');
		$condition=array('friends.user_two_id'=>$cuid,'friends.status'=>0,'friends.notify'=>0);
		$relation="tb_users.id=friends.user_one_id";
		$pendingRequest = $this->common_model->get_two_table_data($info,USERS,FRIENDS,$relation,$condition,$groupby="");
		$condition1="receiver ='$cuid' AND `notify` = '0' ";
		$checkmessage = $this->common_model->getsingle(MESSAGES,$condition1);
		$i=0;
		if(!empty($pendingRequest)){
			foreach($pendingRequest as $row){ $i++;
				$sendername=$row['firstname'].' '.$row['lastname'];
				$message="You have a new New Friend Request";	
				$frid=$row['id'];
				$arr['msg']=$message;
				$arr['title']=$sendername;
				$arr['result']=1;
				$arr['type']='F-REQUEST';
				$arr['returl']=site_url('profile');
				echo json_encode($arr);
				sleep(3);
				$updtData=array('notify'=>1);
				$where=array('id'=>$frid);
				$updt=$this->common_model->updateFields(FRIENDS, $updtData, $where);
			}	
		}
		if(!empty($checkmessage)){ $i++;
			$sender=$checkmessage->sender;
			$message=$checkmessage->message;
			$usrDtl=$this->common_model->getsingle(USERS,array('id'=>$sender));
			$sendername=$usrDtl->firstname.' '.$usrDtl->lastname;
			$msgid=$checkmessage->id;
			$uimg=(!empty($usrDtl->profile))? $usrDtl->profile:DEFAULT_IMAGE;
			$rets='
			<div class="fil_ds">
			<div class="pro_img"><img src="'.$uimg.'" alt="'.strtoupper(substr($usrDtl->firstname,0,1)).'" style="width: 40px;border-radius: 20px;"></div>
			<div class="msg_bx">'.$message.'</div>
			<span class="date">'.date('M-d-Y h:i A',strtotime($checkmessage->message_date)).'</span>
			</div>
			';
			$arr['msg']=$message;
			$arr['title']=$sendername;
			$arr['result']=1;
			$arr['type']='MESSAGE';
			$arr['msView']=$rets;
			$arr['usId']=$checkmessage->sender;
			$arr['returl']=site_url('user/message');
			echo json_encode($arr);
			sleep(3);
			$updtData1=array('notify'=>1);
			$where1=array('id'=>$msgid);
			$updts=$this->common_model->updateFields(MESSAGES, $updtData1, $where1);
		}	
		if($i==0){
			$arr['msg']="NO Message";
			$arr['title']="No Message";
			$arr['result']=0;
			$arr['type']='';
			$arr['returl']="";
			echo json_encode($arr);		
		}
	}
}	
/*********************************************/
/***************** LOGOUT *******************/
/*********************************************/	  
public function logout(){
	$this->session->unset_userdata('loggedIn');
	$this->session->unset_userdata('userData');
	$this->facebook->destroy_session();
	$this->session->sess_destroy();
	redirect(base_url());
} 
/******************-Deactivate-Account-**********************/	  
public function deleteaccount(){
	$userid=get_current_user_id();	
	$updtData1=array('active'=>0);
	$where1=array('id'=>$userid);
	$updts=$this->common_model->updateFields(USERS, $updtData1, $where1);
	$this->session->unset_userdata('loggedIn');
	$this->session->unset_userdata('userData');
	$this->facebook->destroy_session();
	$this->session->sess_destroy();
	$this->session->set_flashdata('loginmsg','
		<div class="alert alert-danger text-center"> Your account has been deactivated successfully. Thanks for being with us.</div>
		');
	redirect(base_url('login'));
}
/********************************/

public function find_friend(){
	$data['category_data'] = $this->common_model->getAllwhere(CATEGORY,array('category_status'=>'1'),'id','DESC','','');
	$this->load->view('frontend/fiendourfriend',$data);
}

function curl($url, $post = "") {
	$curl = curl_init();
	$userAgent = 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; .NET CLR 1.1.4322)';
	curl_setopt($curl, CURLOPT_URL, $url);
	curl_setopt($curl, CURLOPT_RETURNTRANSFER, TRUE);
	curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 5);
	if ($post != "") {
		curl_setopt($curl, CURLOPT_POST, 5);
		curl_setopt($curl, CURLOPT_POSTFIELDS, $post);
	}
	curl_setopt($curl, CURLOPT_USERAGENT, $userAgent);
	curl_setopt($curl, CURLOPT_FOLLOWLOCATION, TRUE);
	curl_setopt($curl, CURLOPT_AUTOREFERER, TRUE);
	curl_setopt($curl, CURLOPT_TIMEOUT, 10);
	curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, FALSE);
	$contents = curl_exec($curl);
	curl_close($curl);
	return $contents;
}

public function editwallpost(){
	if($this->checkUserLogin()){
		if(isset($_POST['post_content'])){
			$allimg=array();
			if(isset($_POST['post_images'])){
				$images=$_POST['post_images'];
				foreach($images as $img){
					if(strpos($img,'uploads/posts/') === false){
						$dats=explode(';',$img);
						$dats1=explode('/',$dats[0]);
						$ext=$dats1[1];
						$image=uploadImageData($img,'posts',$ext,"","","");
						if($image['status']=='Failed'){
						}else{
							$allimg[]=$image['imagename'];
						}
					}else{
						$allimg[]=$img;
					}
				}
				$dataArr['post_image']=implode(',',$allimg);
			}

			$dataArr['post_content']=$_POST['post_content'];
			$update = $this->common_model->updateFields(POSTS,$dataArr,array('id'=>$this->input->post('post_id')));
			$postData = $this->common_model->getsingle(POSTS,array('id'=>$this->input->post('post_id')));
			if(true){
				$postimg="";  
				if(isset($postData->post_image) && $postData->post_image!=""){   
					$imgsert=$postData->post_image;
					$imgsert = explode(',',$imgsert);
					if(count($imgsert)>1){ 
						$postimg.='
						<div class="row">
						';
						foreach($imgsert as $postim){
							$postimg.='
							<div class ="col-sm-4 col-md-4"><a href="#" class="thumbnail"><img src="'.base_url().$postim.'" alt="Post Image"></a></div>
							';
						}
						$postimg.="
						</div>
						";
					}else{
						$postimg='
						<div class="over_viewimg">
						<img src="'.base_url().$imgsert[0].'" class="img-fluid">
						<div class="bl-box"><img src="'.base_url().'assets/images/scrl.png"></div>
						</div>
						';
					}
				}  
				$html='
				<div class="main_blog">
				<div class="over_viewimg">
				'.$postimg.'
				</div>
				<div class="contant_overviw esdu" onclick="setID('.$postData->id.');">
				<h1>'. date('d-m-Y H:i A').'</h1>
				<div class="btnns">
				<div class="form-group">
				<a href="#" class="linke"><img src="'.base_url().'assets/images/like.png">
				<i class="fa fa-thumbs-up"></i>
				</a>
				</div>
				<a href="" class="editss" data-toggle="modal" data-target="#myModal2" onclick="editPost('.$postData->id.')"><img src="'.base_url().'assets/images/edit.png"></a>
				<a href="" class="editss" data-toggle="modal" data-target="#modalDelete"><i class="fa fa fa-trash-o"></i></a>
				</div>
				<p>'.$dataArr['post_content'].'</p>
				</div>
				</div>
				';
				$ret=array('status'=>'success','msg'=>$html);  
			}else{
				$ret=array('status'=>'Failed','msg'=>'Something Went Wrong, Try Again');
			}
		}else{
			$ret=array('status'=>'Failed','msg'=>'Something Went Wrong, Try Again');
		}
		echo json_encode($ret); 
	}else{
		$ret=array('status'=>'Failed','msg'=>'Something Went Wrong, Try Again');
		echo json_encode($ret);				
	}
}

public function getMails(){
	$userData = $this->common_model->getsingle(USERS,array('id'=>get_current_user_id()));

}


// public function test(){
// 	echo '<a href="https://accounts.google.com/o/oauth2/auth?client_id=758763789707-04pg43rrkkml6ab4r9gts376ufqjbcfn.apps.googleusercontent.com&redirect_uri=https://webandappdevelopers.com/workadviser_ci/user/google&scope=https://www.google.com/m8/feeds/&response_type=code">test</a>';
// }

public function google(){
	$accesstoken = '';
	$client_id = '758763789707-04pg43rrkkml6ab4r9gts376ufqjbcfn.apps.googleusercontent.com';
	$client_secret = '_4o-3F0WT-9z_kFFWoVKNSO-';
	$redirect_uri = 'https://workadvisor.co/user/google';
	$simple_api_key = 'AIzaSyCekfR5xw15WyU46QEsLIQsdnn4FqUanjQ';
	$max_results = 500;
	$auth_code = $_GET["code"];
	$fields = array(
		'code' => urlencode($auth_code),
		'client_id' => urlencode($client_id),
		'client_secret' => urlencode($client_secret),
		'redirect_uri' => urlencode($redirect_uri),
		'grant_type' => urlencode('authorization_code')
	);
	$post = '';
	foreach ($fields as $key => $value) {
		$post .= $key . '=' . $value . '&';
	}
	$post = rtrim($post, '&');

	$curl = curl_init();
	curl_setopt($curl, CURLOPT_URL, 'https://accounts.google.com/o/oauth2/token');
	curl_setopt($curl, CURLOPT_POST, 5);
	curl_setopt($curl, CURLOPT_POSTFIELDS, $post);
	curl_setopt($curl, CURLOPT_RETURNTRANSFER, TRUE);
	curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0);
	curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 0);
	$result = curl_exec($curl);

	curl_close($curl);

	$response = json_decode($result);
	if (isset($response->access_token)) {
		$accesstoken = $response->access_token;
		$_SESSION['access_token'] = $response->access_token;
	}
	if (isset($_GET['code'])) {
		$accesstoken = $_SESSION['access_token'];
	}

	if (isset($_REQUEST['logout'])) {
		unset($_SESSION['access_token']);
	}
	$url = 'https://www.google.com/m8/feeds/contacts/default/full?max-results=' . $max_results . '&alt=json&oauth_token=' . $accesstoken;
	$xmlresponse = $this->curl($url);
	$contacts = json_decode($xmlresponse,true);
	pr($contacts);
	$return = array();
	if (!empty($contacts['feed']['entry'])) {
		foreach($contacts['feed']['entry'] as $contact) {
//retrieve Name and email address  
//$data = file_get_contents('http://picasaweb.google.com/data/entry/api/user/'.$contact['gd$email'][0]['address'].'?alt=json',true);
			if($this->get_http_response_code('http://picasaweb.google.com/data/entry/api/user/'.$contact['gd$email'][0]['address'].'?alt=json') != "200"){
				$return[] = array (
					'name'=> $contact['title']['$t'],
					'email' => $contact['gd$email'][0]['address'],
					'image' => base_url().'assets/images/default_mail.jpg'
				);
			}else{
				$data = file_get_contents('http://picasaweb.google.com/data/entry/api/user/'.$contact['gd$email'][0]['address'].'?alt=json');
				$img = json_decode($data);
				$return[] = array (
					'name'=> $contact['title']['$t'],
					'email' => $contact['gd$email'][0]['address'],
					'image' => $img->{'entry'}->{'gphoto$thumbnail'}->{'$t'}
				);
			}
		}				
	}
	$data = array();
	$data['contacts'] = $return;
	$data['authUrl'] = $this->facebook->login_url();
	$data['loginURL'] = $this->googleplus->loginURL();	
	$this->pageview('friends_invite',$data,$data,array());
}

/*Invitation mail using Yahoo*/


public  function yahoo_response()
{
	require_once(APPPATH.'libraries/yahoo_api/globals.php');
    require_once(APPPATH.'libraries/yahoo_api/oauth_helper.php');
	$request_token          =   $_SESSION['request_token'];
	$request_token_secret   =   $_SESSION['request_token_secret'];
	$oauth_verifier         =   $_GET['oauth_verifier'];
	$retarr = get_access_token_yahoo(OAUTH_CONSUMER_KEY, OAUTH_CONSUMER_SECRET,
		$request_token, $request_token_secret,
		$oauth_verifier, false, true, true);
	$retarrs = array();
	if (! empty($retarr)) {
		list($info, $headers, $body, $body_parsed) = $retarr;
		if ($info['http_code'] == 200 && !empty($body)) {
			$guid    =  $body_parsed['xoauth_yahoo_guid'];
			$access_token  = rfc3986_decode($body_parsed['oauth_token']) ;
			$access_token_secret  = $body_parsed['oauth_token_secret'];

			$retarrs = callcontact_yahoo(OAUTH_CONSUMER_KEY, OAUTH_CONSUMER_SECRET,
				$guid, $access_token, $access_token_secret,
				false, true);
		}
	}
	$data = array();
	$data['contacts'] = $retarrs;
	$data['authUrl'] = $this->facebook->login_url();
	$data['loginURL'] = $this->googleplus->loginURL();	
	$this->pageview('friends_invite',$data,$data,array());
}
function get_http_response_code($url) {
	$headers = get_headers($url);
	return substr($headers[0], 9, 3);
}

public function send_invitation(){
	if($this->input->post('emails')){
		$cuid=get_current_user_id();
		$userData = $this->common_model->getsingle(USERS,array('id'=>$cuid));
		$senderName = ucfirst($userData->firstname)." ".ucfirst($userData->lastname);
		$email = $this->input->post('emails');
		$tosend = implode(',',$email);
		if(!empty($email)){
			foreach($email as $row){
				$message = '';
				$from = "noreply@workadvisor.co";    
				$subject = 'Workadvisor Invitation from '.$senderName;  
				$message .= 'Please click on the below link to join Workadvisor<br><br>';
				$message .= '<a style="font-weight: bold;letter-spacing: normal;line-height: 100%;text-align: center;text-decoration: none;
				color: #ffffff;background: #f26d35;line-height: 3;padding:15px;" href="'. base_url().'login">+ Join Workadvisor</a><br/><br/>';

				$config['protocol'] = 'ssmtp';
				$config['smtp_host'] = 'ssl://ssmtp.gmail.com';
				$config['mailtype'] = 'html';
				$config['newline'] = '\r\n';
				$config['charset'] = 'utf-8';
				$this->load->library('email');
				$this->email->initialize($config);
				$mailData = array();
				$mailData['message'] = $message;
				$mailData['username'] = '';
				$message = $this->load->view('frontend/mailtemplate',$mailData,true);
				$this->email->from($from);
				// $this->email->to($tosend);
				$this->email->to($row);
				//$this->email->bcc($tosend);
				$this->email->subject($subject);
				$this->email->message($message);
				if($this->email->send()){
				}
			}
			$this->session->set_flashdata('success','
						<div class="alert alert-success text-center">Invitation successfully sent to all the friends !!</div>
						');
			redirect('profile'); 
		}
	}
}

public function invite_gmail_contacts(){
	$data = array();
	$data['authUrl'] = $this->facebook->login_url();
	$data['loginURL'] = $this->googleplus->loginURL();	
	$this->pageview('manual_email',$data,$data,array());
}

public function newNotifications(){
	if($this->checkUserLogin()){
		$arrayCount = 0;
		$count = 0;
		$html = '';
		$notficationsArray = array();
		$cuid=get_current_user_id();
		$from = "noreply@workadvisor.co";
		$userData = $this->common_model->getsingle(USERS,array('id'=>$cuid));
		$email = $userData->email;
		// $email = "priyanka.pixlrit@gmail.com";
		$username = $userData->firstname;
		$business_names = $userData->business_name;
		$message_notification =  $userData->message_notification;
		$job_request_received_notification =  $userData->job_request_received_notification;
		$friend_request_received_notification =  $userData->friend_request_received_notification;
		$friend_request_acceptance_notification =  $userData->friend_request_acceptance_notification;
		$job_request_acceptance_notification =  $userData->job_request_acceptance_notification;
		$config['protocol'] = 'ssmtp';
		$config['smtp_host'] = 'ssl://ssmtp.gmail.com';
		$config['mailtype'] = 'html';
		$config['newline'] = '\r\n';
		$config['charset'] = 'utf-8';
		$this->load->library('email', $config);
		$this->email->initialize($config);
//code for messages
		$info=array('tb_users.id as userid','tb_users.firstname','tb_users.lastname','messages.message_date as accept_date','tb_users.business_name','msg_status','messages.id as msg_id');
//$condition=array('messages.receiver'=>$cuid,'messages.notify'=>0,'messages.accept_status_notify'=>1);
		$condition=array('messages.receiver'=>$cuid,'messages.accept_status_notify'=>1);
		$relation="messages.sender=tb_users.id";
		$pendingMessages = $this->common_model->get_two_table_data($info,USERS,MESSAGES,$relation,$condition,$groupby="");
		if(!empty($pendingMessages)){
			foreach($pendingMessages as $row){
				$notficationsArray[$arrayCount] = $row;
				$notficationsArray[$arrayCount]['type'] = 'message';
				$arrayCount++;
			}
		}


//code for business profile request
		if($userData->user_role =='Employer'){
			$info=array('tb_users.id as userid','tb_users.firstname','tb_users.lastname','requests.accept_date','msg_status','requests.id as requests_id');
//$condition=array('requests.receiver'=>$cuid,'requests.notify'=>0,'requests.accept_status_notify'=>1);
			$condition=array('requests.receiver'=>$cuid,'requests.accept_status_notify'=>1,'requests.status!='=>1,'requests.confirmed!='=>2);
			$relation="requests.sender=tb_users.id";
			$pendingRequests = $this->common_model->get_two_table_data($info,USERS,REQUESTS,$relation,$condition,$groupby="");



			if(!empty($pendingRequests)){
				foreach($pendingRequests as $row){
					$notficationsArray[$arrayCount] = $row;
					$notficationsArray[$arrayCount]['type'] = 'business';
					$arrayCount++;
				}
			}
		}


		//code for business profile request to performer
		if($userData->user_role =='Performer'){
			$info=array('tb_users.id as userid','tb_users.firstname','tb_users.lastname','requests.accept_date','msg_status','requests.id as requests_id','tb_users.business_name');
			$condition=array('requests.sender'=>$cuid,'requests.accept_status_notify_business_sent'=>1,'requests.status!='=>1,'job_requested_by!='=>$cuid,'requests.confirmed_business!='=>2);
			$relation="requests.receiver=tb_users.id";
			$pendingRequests = $this->common_model->get_two_table_data($info,USERS,REQUESTS,$relation,$condition,$groupby="");
			if(!empty($pendingRequests)){
				foreach($pendingRequests as $row){
					$notficationsArray[$arrayCount] = $row;
					$notficationsArray[$arrayCount]['type'] = 'business_job';
					$arrayCount++;
				}
			}
		}


//code for new friend request came to user
		if($userData->user_role =='Performer'){
			$info=array('tb_users.id as userid','tb_users.firstname','tb_users.lastname','friends.accept_date','tb_users.business_name','msg_status','friends.id as friend_id');
// $condition=array('friends.user_two_id'=>$cuid,'friends.notify'=>0,'friends.accept_status_notify'=>1);
			$condition=array('friends.user_two_id'=>$cuid,'friends.accept_status_notify!='=>2,'friends.status!='=>1);
			$relation="friends.user_one_id=tb_users.id";
			$pendingFriendRequest = $this->common_model->get_two_table_data($info,USERS,FRIENDS,$relation,$condition,$groupby="");
			if(!empty($pendingFriendRequest)){
				foreach($pendingFriendRequest as $row){
					$notficationsArray[$arrayCount] = $row;
					$notficationsArray[$arrayCount]['type'] = 'recievedrequest';
					$arrayCount++;
				}
			}
		}

//code when the friend has accepted your request
		if($userData->user_role =='Performer'){
			$info=array('tb_users.id as userid','tb_users.firstname','tb_users.lastname','friends.accept_date','msg_status','friends.id as friend_id');
// $condition=array('friends.user_one_id'=>$cuid,'friends.notify'=>0,'friends.status'=>1,'friends.accept_status_notify'=>1);
			$condition=array('friends.user_one_id'=>$cuid,'friends.status'=>1,'friends.accept_status_notify!='=>3);
			$relation="friends.user_two_id=tb_users.id";
			$pendingFriendRequestAccepted = $this->common_model->get_two_table_data($info,USERS,FRIENDS,$relation,$condition,$groupby="");

			if(!empty($pendingFriendRequestAccepted)){
				foreach($pendingFriendRequestAccepted as $row){
					$notficationsArray[$arrayCount] = $row;
					$notficationsArray[$arrayCount]['type'] = 'accepted';
					$arrayCount++;
				}
			}
		}


		//code when the company has accepted your request
		if($userData->user_role =='Performer'){
			$info=array('tb_users.id as userid','tb_users.firstname','tb_users.lastname','requests.accept_date','msg_status','requests.id as requests_id','tb_users.business_name');

			$condition=array('requests.sender'=>$cuid,'requests.status'=>1,'requests.confirmed'=>1);
			$relation="requests.receiver=tb_users.id";
			$pendingJobRequestAccepted = $this->common_model->get_two_table_data($info,USERS,REQUESTS,$relation,$condition,$groupby="");
			if(!empty($pendingJobRequestAccepted)){
				foreach($pendingJobRequestAccepted as $row){
					$notficationsArray[$arrayCount] = $row;
					$notficationsArray[$arrayCount]['type'] = 'accepted_job';
					$arrayCount++;
				}
			}
		}

		//code when the performer has accepted your job request
		if($userData->user_role =='Employer'){
			$info=array('tb_users.id as userid','tb_users.firstname','tb_users.lastname','requests.accept_date','msg_status','requests.id as requests_id','tb_users.business_name');
			$condition=array('requests.receiver'=>$cuid,'requests.status'=>1,'requests.confirmed_business'=>1,'requests.job_requested_by'=>$cuid);
			$relation="requests.sender=tb_users.id";
			$pendingJobRequestAccepted = $this->common_model->get_two_table_data($info,USERS,REQUESTS,$relation,$condition,$groupby="");
			if(!empty($pendingJobRequestAccepted)){
				foreach($pendingJobRequestAccepted as $row){
					$notficationsArray[$arrayCount] = $row;
					$notficationsArray[$arrayCount]['type'] = 'accepted_job_business';
					$arrayCount++;
				}
			}
		}


		// pr($notficationsArray);
		if(!empty($notficationsArray) && count($notficationsArray)>0){
			$top5 = 0;
			$notficationsArray = json_decode(json_encode($notficationsArray));
			$notficationsArray = (array_multi_subsort($notficationsArray,'accept_date'));
			foreach($notficationsArray as $row){
				$top5++;
				if($top5<=5){
					$count++;
					if($row->type == 'message'){
						$senderID = encoding($row->userid);
						$receiverID = encoding($cuid);
						$name = '';
						if($row->business_name!='' && isset($row->business_name)){
							$html.='<li><a href="'.base_url().'user/updatestatus/message/'.$senderID.'/'.$receiverID.'">'.$row->business_name.' sent you a message.</a></li>';
							$name = $row->business_name;
						}else{
							$html.='<li><a href="'.base_url().'user/updatestatus/message/'.$senderID.'/'.$receiverID.'">'.$row->firstname." ".$row->lastname.' sent you a message.</a></li>';
							$name = $row->firstname." ".$row->lastname;
						}
					}
					else if($row->type == 'business'){
						$senderID = encoding($row->userid);
						$receiverID = encoding($cuid);
						$html.='<li><a href="'.base_url().'user/updatestatus/business/'.$senderID.'/'.$receiverID.'">'.$row->firstname." ".$row->lastname.' sent you a job request.</a></li>';
					}
					else if($row->type == 'business_job'){
						$senderID = encoding($cuid);
						$receiverID = encoding($row->userid);
						if($row->business_name!='' && isset($row->business_name)){
							$html.='<li><a href="'.base_url().'user/updatestatus/business_job/'.$senderID.'/'.$receiverID.'">'.$row->business_name.' sent you a job request.</a></li>';
						}
					}
					else if($row->type == 'recievedrequest'){
						$senderID = encoding($row->userid);
						$receiverID = encoding($cuid);
						if($row->business_name!='' && isset($row->business_name)){
							$html.='<li><a href="'.base_url().'user/updatestatus/recievedrequest/'.$senderID.'/'.$receiverID.'">'.$row->business_name.' sent you a friend request.</a></li>';
							$name = $row->business_name;
						}else{
							$html.='<li><a href="'.base_url().'user/updatestatus/recievedrequest/'.$senderID.'/'.$receiverID.'">'.$row->firstname." ".$row->lastname.' sent you a friend request.</a></li>';
							$name = $row->firstname." ".$row->lastname;
						}
					}
					else if($row->type == 'accepted'){
						$senderID = encoding($cuid);
						$receiverID = encoding($row->userid);
						$html.='<li><a href="'.base_url().'user/updatestatus/accepted/'.$senderID.'/'.$receiverID.'">'.$row->firstname." ".$row->lastname.' has accepted your friend request.</a></li>';
					}
					else if($row->type == 'accepted_job'){
						$senderID = encoding($cuid);
						$receiverID = encoding($row->userid);
						$html.='<li><a href="'.base_url().'user/updatestatus/accepted_job/'.$senderID.'/'.$receiverID.'">'.$row->business_name.' has accepted your job request.</a></li>';
					}else if($row->type == 'accepted_job_business'){
						$senderID = encoding($row->userid);
						$receiverID = encoding($cuid);
						$html.='<li><a href="'.base_url().'user/updatestatus/accepted_job_business/'.$senderID.'/'.$receiverID.'">'.$row->firstname." ".$row->lastname.' has accepted your job request.</a></li>';
					}
				}
			}
		}else{
			$html.='<li>No new notifications found</li>';
			$this->session->set_userdata('notifications','');
		}
		$this->session->set_userdata('notifications',$html);
		echo json_encode(array('count'=>$count,'html'=>$html));
	}
}

public function updatestatus($type,$sender,$receiver){
	$sender = decoding($sender);
	$receiver = decoding($receiver);
	if($type == 'message'){
		$where = array('sender'=>$sender,'receiver'=>$receiver);
		$updtData = array('accept_status_notify'=>2);
		$this->common_model->updateFields(MESSAGES, $updtData, $where);
		redirect('user/message');
	}else if($type == 'business'){
		$where = array('sender'=>$sender,'receiver'=>$receiver);
		$updtData = array('accept_status_notify'=>2);
		$this->common_model->updateFields(REQUESTS, $updtData, $where);
// redirect('viewdetails/profile/'.encoding($sender));
		$this->session->set_userdata('request_redirect',1);
		redirect('businessprofile');
	}else if($type == 'business_job'){
		$where = array('sender'=>$sender,'receiver'=>$receiver);
		$updtData = array('accept_status_notify_business_sent'=>2);
		$this->common_model->updateFields(REQUESTS, $updtData, $where);
		$this->session->set_userdata('friends_redirect',1);
		redirect('profile');
	}else if($type == 'recievedrequest'){
		$where = array('user_one_id'=>$sender,'user_two_id'=>$receiver);
		$updtData = array('accept_status_notify'=>2);
		$this->common_model->updateFields(FRIENDS, $updtData, $where);
		redirect('viewdetails/profile/'.encoding($sender));
	}else if($type == 'accepted'){
		$where = array('user_one_id'=>$sender,'user_two_id'=>$receiver);
		$updtData = array('accept_status_notify'=>3);
		$this->common_model->updateFields(FRIENDS, $updtData, $where);
		$this->session->set_userdata('friends_redirect',1);
		redirect('profile');
	}else if($type == 'accepted_job'){
		$where = array('sender'=>$sender,'receiver'=>$receiver);
		$updtData = array('confirmed'=>2);
		$this->common_model->updateFields(REQUESTS, $updtData, $where);
		redirect('viewdetails/profile/'.encoding($receiver));
	}else if($type == 'accepted_job_business'){
		$where = array('sender'=>$sender,'receiver'=>$receiver);
		$updtData = array('confirmed_business'=>2);
		$this->common_model->updateFields(REQUESTS, $updtData, $where);
		redirect('viewdetails/profile/'.encoding($sender));
	}
}

public function searchName(){
	$searchName = $this->input->post('search');
//$where = " firstname like '%$searchName%' OR lastname like '%$searchName%'";
	$user_id=get_current_user_id();
	$customQuery="SELECT * FROM (SELECT * FROM `".MESSAGES."` ORDER BY `message_date` DESC) `temp` INNER JOIN `".USERS."` ON `".USERS."`.`id`=`temp`.`sender` OR `".USERS."`.`id`=`temp`.`receiver` WHERE (`temp`.`sender` = '".$user_id."' OR `temp`.`receiver` = '".$user_id."') AND `tb_users`.`id` != '".$user_id."' AND(firstname like '%$searchName%' OR lastname like '%$searchName%' OR CONCAT(tb_users.`firstname`,' ',tb_users.`lastname`) like '%$searchName%' OR tb_users.`business_name` like '%$searchName%') GROUP BY `tb_users`.`id` ORDER BY temp.id DESC";

	$data['allFriends']=$this->common_model->custom_query($customQuery);
	$this->load->view('frontend/messagenames',$data);
}


public function searchMsg(){
	$searchName = $this->input->post('search');
//$where = " firstname like '%$searchName%' OR lastname like '%$searchName%'";
	$user_id=get_current_user_id();
	$customQuery="SELECT * FROM (SELECT * FROM `".MESSAGES."` ORDER BY `message_date` DESC) `temp` INNER JOIN `".USERS."` ON `".USERS."`.`id`=`temp`.`sender` OR `".USERS."`.`id`=`temp`.`receiver` WHERE (`temp`.`sender` = '".$user_id."' OR `temp`.`receiver` = '".$user_id."') AND `tb_users`.`id` != '".$user_id."' AND(firstname like '%$searchName%' OR lastname like '%$searchName%' OR CONCAT(tb_users.`firstname`,' ',tb_users.`lastname`) like '%$searchName%' OR tb_users.`business_name` like '%$searchName%') GROUP BY `tb_users`.`id` ORDER BY temp.id DESC";
	$data['allFriends']=$this->common_model->custom_query($customQuery);
	$userIDs = array();
	if(!empty($data['allFriends'])){
		foreach($data['allFriends'] as $row){
			$userIDs[] = $row['id'];
		}
		$users = implode(',', $userIDs);
	}

	if(!empty($users)){
		$singleUser=$this->common_model->getsingle(MESSAGES,"(receiver='$user_id' AND sender IN($users)) OR (sender='$user_id' AND receiver IN($users))","*","id","DESC");

		$data['conversation']=array('result'=>array());
		if(!empty($singleUser)){
			if($singleUser->sender!=$user_id){
				$id=$singleUser->sender;
			}else{
				$id=$singleUser->receiver;	
			}
			$con="(sender='$user_id' AND receiver='$id') OR (sender='$id' AND receiver='$user_id')";
			$data['conversation'] = $this->common_model->getAllwhere(MESSAGES,$con,'id','DESC','all',5,0,$group_by='',$and_where = '');
			$data['user_data'] = $this->common_model->getsingle(USERS,array('id'=>$id));
			$data['personal_data'] = $this->common_model->getsingle(USERS,array('id'=>$user_id));
		}
	}
	$this->load->view('frontend/usermsg',$data);

}

public function checkQuestionsAvailabitity(){
	$user_type = 'Employer';
	if($this->input->post('user_type') == 'Performer'){
		$user_type = 'Employee';
	}
	$categoryData = $this->common_model->getsingle(CATEGORY_QUESTIONS,array('category_id'=>$this->input->post('user_category'),'user_type'=>$user_type,'question!='=>''));
	if(!empty($categoryData)){
		echo json_encode(array('status'=>1));
	}else{
		$categoryData = $this->common_model->getsingle(CATEGORY,array('id'=>$this->input->post('user_category')));
		if(!empty($categoryData))
		{
			if($categoryData->name == 'N/A'){
				echo json_encode(array('status'=>1));
			}else{
				echo json_encode(array('status'=>2));
			}
		}
	}
}

public function categoryAddMoreQue(){
	$cate = array();
	$cate['user_role'] = $this->input->post('user_role');
	$cate['user_category'] = $this->input->post('cate_id');
	$this->common_model->updateFields(USERS,$cate,array('id'=>get_current_user_id()));
	if($this->input->post('que_')){
		$employeeQ = $this->input->post('que_');
		if($this->input->post('user_role') == 'Employer'){
			$categoryData = $this->common_model->getAllwhere(CATEGORY_QUESTIONS,array('user_type'=>'Employer','category_id'=>$cate['user_category']));
			if(!empty($categoryData['result'])){
				$count = 0;
				$questions = $this->input->post('que_');
				foreach($categoryData['result'] as $row){
					$dataArr = array();
					$dataArr['question'] = $questions[$count];
					$this->common_model->updateFields(CATEGORY_QUESTIONS,$dataArr,array('id'=>$row->id));
					$count++;
				}
				$this->session->set_userdata('user_login_type','employer');
				redirect('businessprofile');
			}
		}else{
			$categoryData = $this->common_model->getAllwhere(CATEGORY_QUESTIONS,array('user_type'=>'Employee','category_id'=>$cate['user_category']));
			if(!empty($categoryData['result'])){
				$count = 0;
				$questions = $this->input->post('que_');
				foreach($categoryData['result'] as $row){
					$dataArr = array();
					$dataArr['question'] = $questions[$count];
					$this->common_model->updateFields(CATEGORY_QUESTIONS,$dataArr,array('id'=>$row->id));
					$count++;
				}
				$this->session->set_userdata('user_login_type','performer');
				redirect('profile');
			}
		}
	}
}

function getZipLocation(){
	$postcode = urlencode($this->input->post('zip'));
	$query = 'https://maps.googleapis.com/maps/api/geocode/json?address='.$postcode.'&key=AIzaSyCJOMIKWJalIMrYmvfEm-gvEptfSV-ezb8';
	$result = $this->get_data($query);
	$result = json_decode($result);
	$city = '';
	$state = '';
	$country = '';
	if(!empty($result->results[0]->address_components)){
		$address = $result->results[0]->address_components;
		foreach($address as $row){
			if(isset($row->types[0]) && $row->types[0] == 'administrative_area_level_2'){
				$city = $row->short_name;
			}
			if(isset($row->types[0]) && $row->types[0] == 'administrative_area_level_1'){
				$state = $row->short_name;
			}
			if(isset($row->types[0]) && $row->types[0] == 'country'){
				$country = $row->long_name;
			}
		}
		echo json_encode(array('city'=>$city,'state'=>$state,'country'=>$country));
	}
}
function get_data($url) {
	$ch = curl_init();
	$timeout = 5;
	curl_setopt($ch, CURLOPT_URL, $url);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
	curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, $timeout);
	$data = curl_exec($ch);
	curl_close($ch);
	return $data;
}

public function contactSave(){
	$dataArr['name'] = $this->input->post('name');
	$dataArr['email'] = $this->input->post('email');
	$dataArr['phone'] = $this->input->post('phone');
	$dataArr['message'] = $this->input->post('message');
	$this->common_model->insertData(CONTACT,$dataArr);
		$adminData = $this->common_model->getsingle(ADMIN,array('id'=>1));
	if(!empty($adminData)){
		$email = $adminData->email;
		//$email ="priyanka.pixlrit@gmail.com";
		$from = "noreply@workadvisor.co";    
		$subject = 'Contact message sent by '.ucfirst($dataArr['name']);  
		$message = '<table>';
		$message .= '<tr> <td>Name - </td><td>'.ucfirst($dataArr['name']).'</td></tr>';
		$message .= '<tr> <td>Email - </td><td>'.($dataArr['email']).'</td></tr>';
		$message .= '<tr> <td>Contact No. - </td><td>'.($dataArr['phone']).'</td></tr>';
		$message .= '<tr> <td>Message - </td><td>'.($dataArr['message']).'</td></tr>';
		$message .= '</table>';
		$config['protocol'] = 'ssmtp';
		$config['smtp_host'] = 'ssl://ssmtp.gmail.com';
		$config['mailtype'] = 'html';
		$config['newline'] = '\r\n';
		$config['charset'] = 'utf-8';
		$this->load->library('email');
		$this->email->initialize($config);
		$mailData = array();
		$mailData['message'] = $message;
		$mailData['username'] = "Admin";
		$message = $this->load->view('frontend/mailtemplate',$mailData,true);
		$this->email->from($from);
		$this->email->to($email);
		$this->email->subject($subject);
		$this->email->message($message);
		if($this->email->send()){
			$this->session->set_flashdata('success','
				<div class="alert alert-success text-center">Message successfully sent to Admin</div>
				');
			redirect('settings/contact_us');
		}
	}
}

}